{
  "title": "Draw.FillPolygon",
  "fileName": "draw_fillpolygon",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<b>Draw.FillPolygon</b> (<i>x</i>, <i>y</i>  : <b>array</b> 1 .. * <b>of</b> <b>int</b>, <i>n</i> : <b>int</b>, <i>Color</i> : <b>int</b>)<p>\r\n</p>",
      "text_content": " Draw.FillPolygon (x, y  : array 1 .. * of int, n : int, Color : int)\r\n",
      "mdown_content": "**Draw.FillPolygon** (*x*, *y*  : **array** 1 .. * **of** **int**, *n* : **int**, *Color* : **int**)"
    },
    {
      "title": "Description",
      "raw_content": "The <b>Draw.FillPolygon</b> procedure is used to draw a filled polygon with <i>n</i> points. The polygon is described by the points (<i>x</i>(1), <i>y</i>(1)) to (<i>x</i>(2), <i>y</i>(2)) to (<i>x</i>(3), <i>y</i>(3)) and so on to (<i>x</i>(<i>n</i>), <i>y</i> (<i>n</i>)). The polygon will be drawn and filled with <i>Color</i>. <p>\r\nTo get an polygon outlined in a different color, use <b>Draw.FillPolygon </b>with the <i>Color</i> parameter set to the fill color and then call <b>Draw.Polygon</b> with the <i>Color</i> parameter set to the border color.</p>\n<p>\r\n</p>",
      "text_content": " The Draw.FillPolygon procedure is used to draw a filled polygon with n points. The polygon is described by the points (x(1), y(1)) to (x(2), y(2)) to (x(3), y(3)) and so on to (x(n), y (n)). The polygon will be drawn and filled with Color. \r\nTo get an polygon outlined in a different color, use Draw.FillPolygon with the Color parameter set to the fill color and then call Draw.Polygon with the Color parameter set to the border color.\r\n",
      "mdown_content": "The **Draw.FillPolygon** procedure is used to draw a filled polygon with *n* points. The polygon is described by the points (*x*(1), *y*(1)) to (*x*(2), *y*(2)) to (*x*(3), *y*(3)) and so on to (*x*(*n*), *y* (*n*)). The polygon will be drawn and filled with *Color*. \nTo get an polygon outlined in a different color, use **Draw.FillPolygon **with the *Color* parameter set to the fill color and then call **Draw.Polygon** with the *Color* parameter set to the border color."
    },
    {
      "title": "Example",
      "code": [
        "        View.Set (\"graphics\")\r\n        var x : array 1..8 of int := init (100, 100, 135, 185, \r\n                                   220, 220, 185, 135)\r\n        var y : array 1..8 of int := init (100, 150, 185, 185,\r\n                                   150, 100, 65, 65)\r\n        Draw.FillPolygon (x, y, 8, brightblue)\r\n        Draw.Polygon (x, y, 8, cyan)"
      ],
      "raw_content": "This program will create a filled octagon and display it in bright blue and then outline it in cyan.<p>\r\n</p>",
      "text_content": " This program will create a filled octagon and display it in bright blue and then outline it in cyan.\r\n\r\n    ",
      "mdown_content": "This program will create a filled octagon and display it in bright blue and then outline it in cyan."
    },
    {
      "title": "Execute",
      "executables": [
        {
          "buttontext": "Launch Example Program",
          "name": "Draw.FillPolygon Example",
          "file": "Draw.FillPolygon.t"
        }
      ]
    },
    {
      "title": "Details",
      "raw_content": "The PC allows a maximum of 256 points. As well, <b>Draw.FillPolygon  </b>can fail (due to lack of memory). If failure occurs, it will try to draw an outline of the polygon. If that also fails, it will not draw anything. <p>\r\nThe screen must be in a \"<i>graphics</i>\" mode. See the <b>View.Set</b> procedure for details. If the screen is not in a \"<i>graphics</i>\" mode, an error will occur.</p>\n<p>\r\n</p>",
      "text_content": " The PC allows a maximum of 256 points. As well, Draw.FillPolygon  can fail (due to lack of memory). If failure occurs, it will try to draw an outline of the polygon. If that also fails, it will not draw anything. \r\nThe screen must be in a \"graphics\" mode. See the View.Set procedure for details. If the screen is not in a \"graphics\" mode, an error will occur.\r\n",
      "mdown_content": "The PC allows a maximum of 256 points. As well, **Draw.FillPolygon  **can fail (due to lack of memory). If failure occurs, it will try to draw an outline of the polygon. If that also fails, it will not draw anything. \nThe screen must be in a \"*graphics*\" mode. See the **View.Set** procedure for details. If the screen is not in a \"*graphics*\" mode, an error will occur."
    },
    {
      "title": "Status",
      "raw_content": "Exported qualified.<p>\r\nThis means that you can only call the function by calling <b>Draw.FillPolygon</b>, not by calling <b>FillPolygon</b>.</p>\n<p>\r\n</p>",
      "text_content": " Exported qualified.\r\nThis means that you can only call the function by calling Draw.FillPolygon, not by calling FillPolygon.\r\n",
      "mdown_content": "Exported qualified.\nThis means that you can only call the function by calling **Draw.FillPolygon**, not by calling **FillPolygon**."
    },
    {
      "title": "See also",
      "links": [
        "view_set",
        "maxx",
        "maxy",
        "drawmodule"
      ],
      "raw_content": "<b><a href=\"view_set.html\">View.Set</a></b>, <b><a href=\"maxx.html\">maxx</a></b>, <b><a href=\"maxy.html\">maxy</a></b> and the various procedures in the <b><a href=\"drawmodule.html\">Draw</a></b> unit.<p>\r\n</p>",
      "text_content": " View.Set, maxx, maxy and the various procedures in the Draw unit.\r\n",
      "mdown_content": "**[view_set.html](View.Set)**, **[maxx.html](maxx)**, **[maxy.html](maxy)** and the various procedures in the **[drawmodule.html](Draw)** unit."
    }
  ],
  "dependencies": [

  ]
}
