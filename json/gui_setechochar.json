{
  "title": "GUI.SetEchoChar",
  "fileName": "gui_setechochar",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>GUI.SetEchoChar</b> (<i>widgetID</i> : <b>int</b>, <i>echoChar</i> : <b>char</b>)<p></p></font>",
      "mdown_content": "**GUI.SetEchoChar** (*widgetID* : **int**, *echoChar* : **char**)"
    },
    {
      "title": "Description",
      "raw_content": "The <b>GUI.SetEchoChar</b> procedure is used with text fields,\r\n          especially when using a text field to input a password.\r\n          When the <b>GUI.SetEchoChar</b> is called with a text field, \r\n\t  any character entered into the text field will appear as the\r\n\t  character specified by <i>inputChar</i>.<p>\r\n\t  This allows you to use the text field to enter a password.\r\n\t  The characters that the user types will be echoed with the\r\n\t  character specified by <i>inputChar</i> (often an asterisk).</p>\n<p>\r\n    </p>",
      "mdown_content": "The **GUI.SetEchoChar** procedure is used with text fields,\nespecially when using a text field to input a password.\nWhen the **GUI.SetEchoChar** is called with a text field, \nany character entered into the text field will appear as the\ncharacter specified by *inputChar*.\nThis allows you to use the text field to enter a password.\nThe characters that the user types will be echoed with the\ncharacter specified by *inputChar* (often an asterisk).\n\n"
    },
    {
      "title": "Example",
      "code": [
        "        import GUI\r\n\r\n        procedure EchoString (s : string)\r\n            put \"You entered \\\"\", s, \"\\\"\"\r\n            GUI.Quit\r\n        end EchoString\r\n\r\n        var tf := GUI.CreateTextField (10, 100, 100, \"\", EchoString)\r\n        GUI.SetEchoChar (tf, '*')\r\n        loop\r\n            exit when GUI.ProcessEvent\r\n        end loop"
      ],
      "raw_content": "This program displays a text field.  As the user enters\r\n          characters, each character is represented as a '*'.  When\r\n\t  the user enters return, the program exits after displaying\r\n\t  the actual text entered into the text field.<p>\r\n</p>\n<p>\r\n    </p>",
      "mdown_content": "This program displays a text field.  As the user enters\ncharacters, each character is represented as a '*'.  When\nthe user enters return, the program exits after displaying\nthe actual text entered into the text field.\n\n\n"
    },
    {
      "title": "Execute",
      "executables": [
        {
          "buttontext": "Launch Example Program",
          "name": "GUI.SetEchoChar Example",
          "file": "GUI.SetEchoChar.t"
        }
      ]
    },
    {
      "title": "Details",
      "raw_content": "Note that the <i>echoChar</i> argument to <b>GUI.SetEchoChar</b>\r\n          must be a character, not a string. This means the character\r\n\t  should be enclosed in single quote marks ('), not double\r\n\t  quotes (\").<p>\r\n    </p>",
      "mdown_content": "Note that the *echoChar* argument to **GUI.SetEchoChar**\nmust be a character, not a string. This means the character\nshould be enclosed in single quote marks ('), not double\nquotes (\").\n"
    },
    {
      "title": "Status",
      "raw_content": "Exported qualified.<p>\r\n          This means that you can only call the function by calling \r\n\t  <b>GUI.SetEchoChar</b>, not by calling <b>SetEchoChar</b>.</p>\n<p>\r\n    </p>",
      "mdown_content": "Exported qualified.\nThis means that you can only call the function by calling \n**GUI.SetEchoChar**, not by calling **SetEchoChar**.\n\n"
    }
  ]
}
