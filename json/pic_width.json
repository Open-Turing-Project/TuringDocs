{
  "title": "Pic.Width",
  "fileName": "pic_width",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>Pic.Width</b> (<i>picID</i> : <b>int</b>) : <b>int</b><p>\r\n</p></font>",
      "text_content": " Pic.Width (picID : int) : int\r\n",
      "mdown_content": "**Pic.Width** (_picID_ : **int**) : **int**"
    },
    {
      "title": "Description",
      "raw_content": "<b>Pic.Width </b>returns the width in pixels of the picture represented by <i>picID</i>.<p>\r\nThis function is often used in conjunction with <b>Pic.Height</b> to obtain the dimensions of a picture loaded using <b>Pic.FileNew</b>.</p>\n<p>\r\n</p>",
      "text_content": " Pic.Width returns the width in pixels of the picture represented by picID.\r\nThis function is often used in conjunction with Pic.Height to obtain the dimensions of a picture loaded using Pic.FileNew.\r\n",
      "mdown_content": "**Pic.Width** returns the width in pixels of the picture represented by _picID_.\nThis function is often used in conjunction with **Pic.Height** to obtain the dimensions of a picture loaded using **Pic.FileNew**."
    },
    {
      "title": "Example",
      "code": [
        "        var pic : int := Pic.FileNew (\"lighthouse.jpg\")\r\n        var width : int := Pic.Width (pic)\r\n        var height : int := Pic.Height (pic)\r\n        var x, y : int := 0\r\n        loop\r\n            exit when y > maxy\r\n            loop\r\n                exit when x > maxx\r\n                Pic.Draw (pic, x, y, picCopy)\r\n                x := x + width\r\n            end loop\r\n            x := 0\r\n            y := y + height\r\n        end loop"
      ],
      "raw_content": "The program draws loads a picture from the file <i>lighthouse.jpg</i> and proceeds to tile the entire run window with copies of the picture..<p>\r\n</p>",
      "text_content": " The program draws loads a picture from the file lighthouse.jpg and proceeds to tile the entire run window with copies of the picture..\r\n\r\n",
      "mdown_content": "The program draws loads a picture from the file _lighthouse.jpg_ and proceeds to tile the entire run window with copies of the picture.."
    },
    {
      "title": "Status",
      "raw_content": "Exported qualified.<p>\r\nThis means that you can only call the function by calling <b>Pic.Width</b>, not by calling <b>Width</b>.</p>\n<p>\r\n</p>",
      "text_content": " Exported qualified.\r\nThis means that you can only call the function by calling Pic.Width, not by calling Width.\r\n",
      "mdown_content": "Exported qualified.\nThis means that you can only call the function by calling **Pic.Width**, not by calling **Width**."
    },
    {
      "title": "See also",
      "links": [
        "pic_height",
        "pic_filenew"
      ],
      "raw_content": "<b><a href=\"pic_height.html\">Pic.Height</a></b> to obtain a picture's height and <b><a href=\"pic_filenew.html\">Pic.FileNew</a></b> to load a picture from a graphics file.<p>\r\n</p>",
      "text_content": " Pic.Height to obtain a picture's height and Pic.FileNew to load a picture from a graphics file.\r\n",
      "mdown_content": "**[pic_height.html](Pic.Height)** to obtain a picture's height and **[pic_filenew.html](Pic.FileNew)** to load a picture from a graphics file."
    }
  ],
  "dependencies": [

  ]
}
