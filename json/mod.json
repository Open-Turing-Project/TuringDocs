{
  "title": "mod",
  "fileName": "mod",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>mod</b><p>\r\n</p></font>",
      "text_content": " mod\r\n",
      "mdown_content": "**mod**"
    },
    {
      "title": "Description",
      "raw_content": "The <b>mod</b> (<i>modulo</i>) operator produces the modulo of one number with another. In other words, the result is always a number between 0 and the second operand. If both operands are positive, the result is identical to the remainder operator. For example, 7 <b>mod</b> 2 produces 1 and 12 <b>mod</b> 5 produces 3.<p>\r\n</p>",
      "text_content": " The mod (modulo) operator produces the modulo of one number with another. In other words, the result is always a number between 0 and the second operand. If both operands are positive, the result is identical to the remainder operator. For example, 7 mod 2 produces 1 and 12 mod 5 produces 3.\r\n",
      "mdown_content": "The **mod** (*modulo*) operator produces the modulo of one number with another. In other words, the result is always a number between 0 and the second operand. If both operands are positive, the result is identical to the remainder operator. For example, 7 **mod** 2 produces 1 and 12 **mod** 5 produces 3."
    },
    {
      "title": "Example",
      "code": [
        "        var hours : int := 12\r\n        var hoursPassed : int\r\n        put \"The time is now \", hours, \" o'clock\"\r\n        loop\r\n            randint (hoursPassed, -12, 12)\r\n            exit when hoursPassed = 0\r\n            if hoursPassed < 0 then \r\n                put hoursPassed, \" hours before \" ..\r\n            else\r\n                put hoursPassed, \" hours later \" ..\r\n            end if\r\n            put hours, \" o'clock\" ..\r\n            hours := (hours + hoursPassed) mod 12\r\n            if hours = 0 then \r\n                hours = 12\r\n            end if\r\n            put \" it was \", hours, \" o'clock\"\r\n        end loop"
      ],
      "raw_content": "In this example, <i>hours</i> is the current time. It is moved back and forth by a random amount, but the final result must always be between 1 and 12 (the mod operation produces a number between 0 and 11 and then 0 becomes 12).<p>\r\n</p>",
      "text_content": " In this example, hours is the current time. It is moved back and forth by a random amount, but the final result must always be between 1 and 12 (the mod operation produces a number between 0 and 11 and then 0 becomes 12).\r\n\r\n",
      "mdown_content": "In this example, *hours* is the current time. It is moved back and forth by a random amount, but the final result must always be between 1 and 12 (the mod operation produces a number between 0 and 11 and then 0 becomes 12)."
    },
    {
      "title": "Details",
      "raw_content": "If the second operand is positive, then the result is always non-negative. Likewise, if the second operand is negative, then the result is always non-positive. If both  operands are negative, the result is the same as the remainder operator.<p>\r\n</p>",
      "text_content": " If the second operand is positive, then the result is always non-negative. Likewise, if the second operand is negative, then the result is always non-positive. If both  operands are negative, the result is the same as the remainder operator.\r\n",
      "mdown_content": "If the second operand is positive, then the result is always non-negative. Likewise, if the second operand is negative, then the result is always non-positive. If both  operands are negative, the result is the same as the remainder operator."
    },
    {
      "title": "See also",
      "links": [
        "infix",
        "precedence",
        "rem",
        "div"
      ],
      "raw_content": "<i><a href=\"infix.html\">infix</a> operators</i>, <i><a href=\"precedence.html\">precedence</a> </i>of operators and the <b><a href=\"rem.html\">rem</a></b> and <b><a href=\"div.html\">div</a></b> operators.<p>\r\n</p>",
      "text_content": " infix operators, precedence of operators and the rem and div operators.\r\n",
      "mdown_content": "*[infix.html](infix) operators*, *[precedence.html](precedence) *of operators and the **[rem.html](rem)** and **[div.html](div)** operators."
    }
  ]
}
