{
  "title": "Pic.Frames",
  "fileName": "pic_frames",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>Pic.Frames</b> (<i>pathName</i> : <b>string</b>) : <b>int</b><p></p></font>",
      "text_content": "Pic.Frames (pathName : string) : int\r\n    ",
      "mdown_content": "**Pic.Frames** (_pathName_ : **string**) : **int**\n"
    },
    {
      "title": "Description",
      "raw_content": "<b>Pic.Frames</b> is used to determine the number of frames found \r\n          in a multiple frame GIF file.<p>\r\n    </p>",
      "text_content": "Pic.Frames is used to determine the number of frames found \r\n          in a multiple frame GIF file.\r\n    ",
      "mdown_content": "**Pic.Frames** is used to determine the number of frames found in a multiple frame GIF file.\n"
    },
    {
      "title": "Details",
      "links": [
        "pic_filenewframes",
        "",
        "pic_drawframes",
        "pic_drawframesback",
        "pic_drawframes",
        "pic_drawframesback",
        ""
      ],
      "raw_content": "GIF files can contain multiple frames (pictures).  Animated GIFs \r\n          function by each frame in the GIF one after another with a delay\r\n          between them.\r\n          <p>\r\n          Turing allows users to load multiple frame GIF images into a series\r\n          of pictures into an array using the \r\n          <b><a href=\"pic_filenewframes.html\">Pic.FileNewFrames</a></b> \r\n          procedure.  The user can determine how many frames are found in \r\n          the GIF file using <b><a href=\"\">Pic.Frames</a></b>.  \r\n          The frames can be sequentially displayed using either \r\n          <b><a href=\"pic_drawframes.html\">Pic.DrawFrames</a></b> or \r\n          <b><a href=\"pic_drawframesback.html\">Pic.DrawFramesBack</a></b> \r\n          which display the images one at a time.\r\n          (<b><a href=\"pic_drawframes.html\">Pic.DrawFrames</a></b> returns \r\n          once all the images have been displayed, \r\n          <b><a href=\"pic_drawframesback.html\">Pic.DrawFramesBack</a></b> \r\n          returns immediately allowing the program to continue execution while \r\n          the frames are being displayed.\r\n          </p>\n<p>\r\n          <b><a href=\"\">Pic.Frames</a></b> is a function which \r\n          returns the number of frames found in the GIF.  If it is used on a \r\n          GIF that does not contain multiple images, or on a non-GIF image file, \r\n          it returns 1.</p>\n<p>\r\n    </p>",
      "text_content": "GIF files can contain multiple frames (pictures).  Animated GIFs \r\n          function by each frame in the GIF one after another with a delay\r\n          between them.\r\n          \r\n          Turing allows users to load multiple frame GIF images into a series\r\n          of pictures into an array using the \r\n          Pic.FileNewFrames \r\n          procedure.  The user can determine how many frames are found in \r\n          the GIF file using Pic.Frames.  \r\n          The frames can be sequentially displayed using either \r\n          Pic.DrawFrames or \r\n          Pic.DrawFramesBack \r\n          which display the images one at a time.\r\n          (Pic.DrawFrames returns \r\n          once all the images have been displayed, \r\n          Pic.DrawFramesBack \r\n          returns immediately allowing the program to continue execution while \r\n          the frames are being displayed.\r\n          \r\n          Pic.Frames is a function which \r\n          returns the number of frames found in the GIF.  If it is used on a \r\n          GIF that does not contain multiple images, or on a non-GIF image file, \r\n          it returns 1.\r\n    ",
      "mdown_content": "GIF files can contain multiple frames (pictures).  Animated GIFs function by each frame in the GIF one after another with a delaybetween them.\n\nTuring allows users to load multiple frame GIF images into a seriesof pictures into an array using the **[pic_filenewframes.html](Pic.FileNewFrames)** procedure.  The user can determine how many frames are found in the GIF file using **[](Pic.Frames)**.  The frames can be sequentially displayed using either **[pic_drawframes.html](Pic.DrawFrames)** or **[pic_drawframesback.html](Pic.DrawFramesBack)** which display the images one at a time.(**[pic_drawframes.html](Pic.DrawFrames)** returns once all the images have been displayed, **[pic_drawframesback.html](Pic.DrawFramesBack)** returns immediately allowing the program to continue execution while the frames are being displayed.\n\n**[](Pic.Frames)** is a function which returns the number of frames found in the GIF.  If it is used on a GIF that does not contain multiple images, or on a non-GIF image file, it returns 1.\n"
    },
    {
      "title": "Example",
      "code": [
        "        % Determine the number of frames in \"globe.gif\"\r\n        var numFrames := Pic.Frames (\"globe.gif\")\r\n        % Load the picture\r\n        var delayTime : int\r\n        var pics : array 1 .. numFrames of int\r\n\r\n\tPic.FileNewFrames (\"globe.gif\", pics, delayTime)\r\n\tPic.DrawFrames (pics, 10, 10, picCopy, numFrames, 50, false)"
      ],
      "raw_content": "The program loads a multiple frame GIF called \"globe.gif\" and \r\n          displays it.\r\n<p>\r\n    </p>",
      "text_content": "The program loads a multiple frame GIF called \"globe.gif\" and \r\n          displays it.\r\n\r\n    ",
      "mdown_content": "The program loads a multiple frame GIF called \"globe.gif\" and displays it.\n"
    },
    {
      "title": "Execute",
      "executables": [
        {
          "buttontext": "Launch Example Program",
          "name": "Pic.Frames Example",
          "file": "Pic.DrawFrames.t"
        }
      ]
    },
    {
      "title": "Status",
      "raw_content": "Exported qualified.<p>\r\n\t  This means that you can only call the function by calling \r\n\t  <b>Pic.Frames</b>, not by calling <b>Frames</b>.</p>\n<p>\r\n    </p>",
      "text_content": "Exported qualified.\r\n\t  This means that you can only call the function by calling \r\n\t  Pic.Frames, not by calling Frames.\r\n    ",
      "mdown_content": "Exported qualified.\n\nThis means that you can only call the function by calling **Pic.Frames**, not by calling **Frames**.\n"
    },
    {
      "title": "See also",
      "links": [
        "pic_filenewframes",
        "pic_drawframes",
        "pic_drawframesback"
      ],
      "raw_content": "<b><a href=\"pic_filenewframes.html\">Pic.FileNewFrames</a></b> for information\r\n          on how to load a GIF image with multiple frames into an array of \r\n          <b>int</b>s.<p>\r\n          <b><a href=\"pic_drawframes.html\">Pic.DrawFrames</a></b> for information on\r\n          how to sequentially display the images stored in array of pictures.</p>\n<p>\r\n          <b><a href=\"pic_drawframesback.html\">Pic.DrawFramesBack</a></b> for \r\n          information on how to sequentially display the images stored in array \r\n          of pictures while continuing to execute the program.</p>\n<p>\r\n    </p>",
      "text_content": "Pic.FileNewFrames for information\r\n          on how to load a GIF image with multiple frames into an array of \r\n          ints.\r\n          Pic.DrawFrames for information on\r\n          how to sequentially display the images stored in array of pictures.\r\n          Pic.DrawFramesBack for \r\n          information on how to sequentially display the images stored in array \r\n          of pictures while continuing to execute the program.\r\n    ",
      "mdown_content": "**[pic_filenewframes.html](Pic.FileNewFrames)** for informationon how to load a GIF image with multiple frames into an array of **int**s.\n\n**[pic_drawframes.html](Pic.DrawFrames)** for information onhow to sequentially display the images stored in array of pictures.\n\n**[pic_drawframesback.html](Pic.DrawFramesBack)** for information on how to sequentially display the images stored in array of pictures while continuing to execute the program.\n"
    }
  ],
  "dependencies": [

  ]
}
