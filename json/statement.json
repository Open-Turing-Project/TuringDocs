{
  "title": "statement",
  "fileName": "statement",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "A <i>statement</i> is one of:<p>\r\n</p>\n<table>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(a)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><i>assignmentStatement</i></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% variableReference := expn</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(b)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><i>openStatement</i></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% <b>open</b> &#133;</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(c)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><i>closeStatement</i></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% <b>close</b> &#133;</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(d)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><i>putStatement</i></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% <b>put</b> &#133;</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(e)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><i>getStatement</i></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% <b>get</b> &#133;</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(f)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><i>readStatement</i></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% <b>read</b> &#133;</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(g)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><i>writeStatement</i></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% <b>write</b> &#133;</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(h)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><i>seekStatement</i></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% <b>seek</b> &#133;</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(i)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><i>tellStatement</i></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% <b>tell</b> &#133;</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(j)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><i>forStatement</i></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% <b>for</b> &#133; <b>end for</b></i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(k)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><i>loopStatement</i></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% <b>loop</b> &#133; <b>end loop</b></i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(l)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>exit</b> [ <b>when</b> <i>trueFalseExpn</i> ]</font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(m)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><i>ifStatement</i></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>%<b> if</b> &#133;<b> end if</b></i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(n)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><i>caseStatement</i></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% <b>case</b> &#133; <b>end case</b></i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(o)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>assert</b> <i>trueFalseExpn</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(p)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>begin</b></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"6\"><font size=\"+1\"><i>statementsAndDeclarations</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"7\"><font size=\"+1\"><b>end</b></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(q)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><i>procedureCall</i></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% procedureId [(parameters)]</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(r)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>return</b></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(s)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>result</b> <i>expn</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(t)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>new</b> [ <i>collectionId</i> , ] <i>pointerVariableReference</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(u)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>free</b> [ <i>collectionId</i> , ] <i>pointerVariableReference</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(v)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>tag</b> <i>unionVariableReference</i> , <i>expn</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(w)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><i>forkStatement</i></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% <b>fork</b> &#133;</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(x)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>signal</b> <i>variableReference</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(y)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>wait</b> <i>variableReference</i> [ , <i>expn</i> ]</font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(z)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>pause</b> <i>expn</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(aa)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>quit</b> [ <i>guiltyParty</i> ] [ : <i>quitReason</i> ]</font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(bb)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>unchecked</b></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(cc)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>checked</b></font></td>\n</tr>\n</table>\n<p></p>",
      "mdown_content": "A *statement* is one of:\n\n \n(a)\n*assignmentStatement*\n \n*% variableReference := expn*\n \n(b)\n*openStatement*\n \n*% **open** *\n \n(c)\n*closeStatement*\n \n*% **close** *\n \n(d)\n*putStatement*\n \n*% **put** *\n \n(e)\n*getStatement*\n \n*% **get** *\n \n(f)\n*readStatement*\n \n*% **read** *\n \n(g)\n*writeStatement*\n \n*% **write** *\n \n(h)\n*seekStatement*\n \n*% **seek** *\n \n(i)\n*tellStatement*\n \n*% **tell** *\n \n(j)\n*forStatement*\n \n*% **for**  **end for***\n \n(k)\n*loopStatement*\n \n*% **loop**  **end loop***\n \n(l)\n**exit** [ **when** *trueFalseExpn* ]\n \n(m)\n*ifStatement*\n \n*%** if** ** end if***\n \n(n)\n*caseStatement*\n \n*% **case**  **end case***\n \n(o)\n**assert** *trueFalseExpn*\n \n(p)\n**begin**\n \n \n \n*statementsAndDeclarations*\n \n \n**end**\n \n(q)\n*procedureCall*\n \n*% procedureId [(parameters)]*\n \n(r)\n**return**\n \n(s)\n**result** *expn*\n \n(t)\n**new** [ *collectionId* , ] *pointerVariableReference*\n \n(u)\n**free** [ *collectionId* , ] *pointerVariableReference*\n \n(v)\n**tag** *unionVariableReference* , *expn*\n \n(w)\n*forkStatement*\n \n*% **fork** *\n \n(x)\n**signal** *variableReference*\n \n(y)\n**wait** *variableReference* [ , *expn* ]\n \n(z)\n**pause** *expn*\n \n(aa)\n**quit** [ *guiltyParty* ] [ : *quitReason* ]\n \n(bb)\n**unchecked**\n \n(cc)\n**checked**"
    },
    {
      "title": "Description",
      "code": [
        "        put \"Hello\""
      ],
      "raw_content": "A <i>statement</i> (or <i>command</i>) causes a particular action, for example, the <i>putStatement</i>:<p>\r\n</p>\r\noutputs <i>Hello</i>. See the descriptions of the individual statements for explanations of their actions. Each statement can optionally by followed by a semicolon (;).<p>\r\n</p>",
      "mdown_content": "A *statement* (or *command*) causes a particular action, for example, the *putStatement*:\n\noutputs *Hello*. See the descriptions of the individual statements for explanations of their actions. Each statement can optionally by followed by a semicolon (;)."
    },
    {
      "title": "Example",
      "code": [
        "        width := 24         % Assignment statement\r\n        put \"Hello world\"   % Put statement\r\n        exit when i = 100       % Exit statement\r\n        assert width < 320  % Assert statement"
      ],
      "raw_content": "<p>\r\n</p>",
      "mdown_content": ""
    },
    {
      "title": "Details",
      "raw_content": "You can use a <b>result</b> statement only in a function. You can use a <b>return</b> statement only to terminate a procedure or the main program (but not to terminate the initialization of a module). See also <b>result</b> and <b>return</b>.<p>\r\nThere are a number of predefined procedures, such as <i>drawline</i>, which are not listed as statements above. These are considered  procedure calls, which is one form of statement.</p>\n<p>\r\n</p>",
      "mdown_content": "You can use a **result** statement only in a function. You can use a **return** statement only to terminate a procedure or the main program (but not to terminate the initialization of a module). See also **result** and **return**.\nThere are a number of predefined procedures, such as *drawline*, which are not listed as statements above. These are considered  procedure calls, which is one form of statement.\n"
    }
  ]
}
