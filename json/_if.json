{
  "title": "#if",
  "fileName": "_if",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "A conditional compilation <b>#if</b> has the form:<p>\r\n</p>\n<table>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"8\"><font size=\"+1\"><b>#if</b> <i>expn</i> <b>then</b></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"7\"><font size=\"+1\"><i>&#133; any source text &#133;</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"8\"><font size=\"+1\">{ <b>#elsif</b> <i>expn</i> <b>then</b></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"7\"><font size=\"+1\"><i>&#133; any source text &#133;</i> }</font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"8\"><font size=\"+1\">[ <b>#else</b></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"7\"><font size=\"+1\"><i>&#133; any source text &#133;</i> ]</font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"8\"><font size=\"+1\"><b>#end</b> <b>if</b></font></td>\n</tr>\n</table>\n<p></p>",
      "text_content": " A conditional compilation #if has the form:\r\n #if expn then   any source text  { #elsif expn then   any source text  } [ #else   any source text  ] #end if",
      "mdown_content": "A conditional compilation **#if** has the form:\n\n**#if** _expn_ **then**\n_&#133; any source text &#133;_\n{ **#elsif** _expn_ **then**\n_&#133; any source text &#133;_ }\n[ **#else**\n_&#133; any source text &#133;_ ]\n**#end** **if**\n"
    },
    {
      "title": "Description",
      "raw_content": "An #<b>if</b> construct supports compile time selection of sections of source text to make up a program (or unit of a program), in other words <i>conditional compilation</i>. Any arbitrary source text (characters) can be selected.<p>\r\nEach of the selecting expressions (<i>expns</i>) have the form of a boolean expression, with the use of the operators <b>and</b>, <b>or</b> and <b>not</b> (but not =&gt;) and parentheses. The short forms &amp; and ~ are supported. The operands of the expressions must be <i>preprocessor flags</i>, which are set by a system- dependent mechanism not described here. A flag is considered to be <b>true</b> if it is explicitly set. If it is not explicitly set, it is considered false.</p>\n<p>\r\nUnlike other parts of the language, the <b>#if</b>, <b>#elsif</b>, <b>#else</b> and <b>#end</b> <b>if</b> constructs are not free format. Specifically, they must be placed by themselves on a single line.</p>\n<p>\r\n</p>",
      "text_content": " An #if construct supports compile time selection of sections of source text to make up a program (or unit of a program), in other words conditional compilation. Any arbitrary source text (characters) can be selected.\r\nEach of the selecting expressions (expns) have the form of a boolean expression, with the use of the operators and, or and not (but not =>) and parentheses. The short forms & and ~ are supported. The operands of the expressions must be preprocessor flags, which are set by a system- dependent mechanism not described here. A flag is considered to be true if it is explicitly set. If it is not explicitly set, it is considered false.\r\nUnlike other parts of the language, the #if, #elsif, #else and #end if constructs are not free format. Specifically, they must be placed by themselves on a single line.\r\n",
      "mdown_content": "An #**if** construct supports compile time selection of sections of source text to make up a program (or unit of a program), in other words _conditional compilation_. Any arbitrary source text (characters) can be selected.\nEach of the selecting expressions (_expns_) have the form of a boolean expression, with the use of the operators **and**, **or** and **not** (but not =>) and parentheses. The short forms & and ~ are supported. The operands of the expressions must be _preprocessor flags_, which are set by a system- dependent mechanism not described here. A flag is considered to be **true** if it is explicitly set. If it is not explicitly set, it is considered false.\nUnlike other parts of the language, the **#if**, **#elsif**, **#else** and **#end** **if** constructs are not free format. Specifically, they must be placed by themselves on a single line."
    },
    {
      "title": "Example",
      "code": [
        "        #if stats and debug then\r\n            var count : array 1 .. 5 of real\r\n            var message : string\r\n        #else\r\n            put \"Debugging message\"\r\n        #end if"
      ],
      "raw_content": "A pair of declarations is chosen if both <i>stats</i> and <i>debug</i> are set, otherwise the <b>put</b> statement is selected. The selected part becomes part of the program and the other parts are ignored.<p>\r\n</p>",
      "text_content": " A pair of declarations is chosen if both stats and debug are set, otherwise the put statement is selected. The selected part becomes part of the program and the other parts are ignored.\r\n\r\n",
      "mdown_content": "A pair of declarations is chosen if both _stats_ and _debug_ are set, otherwise the **put** statement is selected. The selected part becomes part of the program and the other parts are ignored."
    }
  ],
  "dependencies": [

  ]
}
