{
  "title": "real",
  "fileName": "real",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>real</b><p>\r\n</p></font>",
      "text_content": " real\r\n",
      "mdown_content": "**real**"
    },
    {
      "title": "Description",
      "raw_content": "The <b>real</b> number type is used for numbers that have fractional parts, for example, 3.14159. Real numbers can be combined by various operators such as addition (+) and multiplication (*). Real numbers can also be combined with integers (whole numbers, such as 23, 0 and -9), in which case the result is generally a real number. An integer can always be assigned to a real variable, with implicit conversion to <b>real</b>.<p>\r\n</p>",
      "text_content": " The real number type is used for numbers that have fractional parts, for example, 3.14159. Real numbers can be combined by various operators such as addition (+) and multiplication (*). Real numbers can also be combined with integers (whole numbers, such as 23, 0 and -9), in which case the result is generally a real number. An integer can always be assigned to a real variable, with implicit conversion to real.\r\n",
      "mdown_content": "The **real** number type is used for numbers that have fractional parts, for example, 3.14159. Real numbers can be combined by various operators such as addition (+) and multiplication (*). Real numbers can also be combined with integers (whole numbers, such as 23, 0 and -9), in which case the result is generally a real number. An integer can always be assigned to a real variable, with implicit conversion to **real**."
    },
    {
      "title": "Example",
      "code": [
        "        var weight, x : real\r\n        var x : real := 9.83\r\n        var tax := 0.7      % The type is implicitly real because\r\n                        % 0.7 is a real number"
      ],
      "raw_content": "<p>\r\n</p>",
      "text_content": "\r\n\r\n",
      "mdown_content": ""
    },
    {
      "title": "Details",
      "raw_content": "See also <i>explicitRealConstant</i>. The <b>int</b> type is used instead of <b>real</b>, when values are whole numbers. See <b>int</b> for details.<p>\r\nReal numbers can be converted to integers using <b>ceil</b> (ceiling), <b>floor</b>, or <b>round</b>. Real numbers can be converted to strings using <b>erealstr</b>, <b>frealstr</b>, and <b>realstr</b>. These conversion functions correspond exactly to the formatting used for the <b>put</b> statement with real numbers. Strings can be converted to real numbers using <b>strreal</b>. See descriptions of these conversion functions.</p>\n<p>\r\nThe predefined functions for real numbers include <b>min</b>,<i> </i><b>max</b>,<i> </i><b>sqrt</b>,<i> </i><b>sin</b>,<i> </i><b>cons</b>,<i> </i><b>arctan</b>,<i> </i><b>sind</b>,<i> </i><b>cosd</b>,<i> </i><b>arcand</b>,<i> </i><b>ln</b><i> </i>and <b>exp</b>. See the descriptions of these functions.</p>\n<p>\r\nPseudo-random sequences of real numbers can be generated using <b>rand</b>. See the description of this procedure.</p>\n<p>\r\nThe Turing Report gives a formal definition (not repeated here) of implemented real numbers in terms of their required accuracy relative to infinitely accurate (mathematical) real numbers.</p>\n<p>\r\nTuring implements real numbers using 8 byte floating point representation. This provides 14 to 16 decimal digits of precision and an exponent range of at least -38 .. 38. The PC and Macintosh versions of Turing have 16 decimal digits of accuracy because they use IEEE standard floating point representation.</p>\n<p>\r\n</p>",
      "text_content": " See also explicitRealConstant. The int type is used instead of real, when values are whole numbers. See int for details.\r\nReal numbers can be converted to integers using ceil (ceiling), floor, or round. Real numbers can be converted to strings using erealstr, frealstr, and realstr. These conversion functions correspond exactly to the formatting used for the put statement with real numbers. Strings can be converted to real numbers using strreal. See descriptions of these conversion functions.\r\nThe predefined functions for real numbers include min, max, sqrt, sin, cons, arctan, sind, cosd, arcand, ln and exp. See the descriptions of these functions.\r\nPseudo-random sequences of real numbers can be generated using rand. See the description of this procedure.\r\nThe Turing Report gives a formal definition (not repeated here) of implemented real numbers in terms of their required accuracy relative to infinitely accurate (mathematical) real numbers.\r\nTuring implements real numbers using 8 byte floating point representation. This provides 14 to 16 decimal digits of precision and an exponent range of at least -38 .. 38. The PC and Macintosh versions of Turing have 16 decimal digits of accuracy because they use IEEE standard floating point representation.\r\n",
      "mdown_content": "See also _explicitRealConstant_. The **int** type is used instead of **real**, when values are whole numbers. See **int** for details.\nReal numbers can be converted to integers using **ceil** (ceiling), **floor**, or **round**. Real numbers can be converted to strings using **erealstr**, **frealstr**, and **realstr**. These conversion functions correspond exactly to the formatting used for the **put** statement with real numbers. Strings can be converted to real numbers using **strreal**. See descriptions of these conversion functions.\nThe predefined functions for real numbers include **min**,_ _**max**,_ _**sqrt**,_ _**sin**,_ _**cons**,_ _**arctan**,_ _**sind**,_ _**cosd**,_ _**arcand**,_ _**ln**_ _and **exp**. See the descriptions of these functions.\nPseudo-random sequences of real numbers can be generated using **rand**. See the description of this procedure.\nThe Turing Report gives a formal definition (not repeated here) of implemented real numbers in terms of their required accuracy relative to infinitely accurate (mathematical) real numbers.\nTuring implements real numbers using 8 byte floating point representation. This provides 14 to 16 decimal digits of precision and an exponent range of at least -38 .. 38. The PC and Macintosh versions of Turing have 16 decimal digits of accuracy because they use IEEE standard floating point representation."
    },
    {
      "title": "See also",
      "links": [
        ""
      ],
      "raw_content": "<b><a href=\"\">real</a></b><i>n</i>.<p>\r\n</p>",
      "text_content": " realn.\r\n",
      "mdown_content": "**[](real)**_n_."
    }
  ],
  "dependencies": [

  ]
}
