{
  "title": "comparisonOperator",
  "fileName": "comparisonoperator",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "A <i>comparisonOperator</i> is one of:<p>\r\n</p>\n<table>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(a)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>&lt;</b></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% Less than</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(b)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>&gt;</b></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% Greater than</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(c)</font></td>\n<td colspan=\"7\"><font size=\"+1\">=</font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% Equal</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(d)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>&lt;</b>=</font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% Less than or equal; subset</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(e)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>&gt;</b>=</font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% Greater than or equal; superset</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(f)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>not=</b></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% Not equal</i></font></td>\n</tr>\n</table>\n<p></p>",
      "text_content": " A comparisonOperator is one of:\r\n (a)< % Less than (b)> % Greater than (c)= % Equal (d)<= % Less than or equal; subset (e)>= % Greater than or equal; superset (f)not= % Not equal",
      "mdown_content": "A _comparisonOperator_ is one of:   \n-  **<**   _% Less than_   \n-  **>**   _% Greater than_   \n-  =   _% Equal_   \n-  **<**=   _% Less than or equal; subset_   \n-  **>**=   _% Greater than or equal; superset_   \n-  **not=**   _% Not equal_"
    },
    {
      "title": "Description",
      "raw_content": "A comparison operator is placed between two values to determine their equality or ordering. For example, 7 &gt; 2 is true and so is \"Adam\" &lt; \"Cathy\". The comparison operators can be applied to numbers as well as to enumerated types. They can also be applied to strings to determine the <i>ordering</i> between strings (see the <b>string</b> type for details). Arrays, records, unions and collections cannot be compared. Boolean values (<b>true</b> and <b>false</b>) can be compared only for equality (= and <b>not=</b>); the same is true of  <b>pointer</b> values. Set values can be compared using &lt;= and &gt;=, which are the subset and superset operators. The <b>not=</b> operator can be written as ~=.<p>\r\nComparisons among classes is also supported (see <b>class</b>). If <i>C</i> and <i>D</i> are classes, <i>C</i> &lt;= <i>D</i> means <i>D</i> is a descendant of (inherits from) <i>C</i>. See <b>class</b>.</p>\n<p>\r\n</p>",
      "text_content": " A comparison operator is placed between two values to determine their equality or ordering. For example, 7 > 2 is true and so is \"Adam\" < \"Cathy\". The comparison operators can be applied to numbers as well as to enumerated types. They can also be applied to strings to determine the ordering between strings (see the string type for details). Arrays, records, unions and collections cannot be compared. Boolean values (true and false) can be compared only for equality (= and not=); the same is true of  pointer values. Set values can be compared using <= and >=, which are the subset and superset operators. The not= operator can be written as ~=.\r\nComparisons among classes is also supported (see class). If C and D are classes, C <= D means D is a descendant of (inherits from) C. See class.\r\n",
      "mdown_content": "A comparison operator is placed between two values to determine their equality or ordering. For example, 7 > 2 is true and so is \"Adam\" < \"Cathy\". The comparison operators can be applied to numbers as well as to enumerated types. They can also be applied to strings to determine the _ordering_ between strings (see the **string** type for details). Arrays, records, unions and collections cannot be compared. Boolean values (**true** and **false**) can be compared only for equality (= and **not=**); the same is true of  **pointer** values. Set values can be compared using <= and >=, which are the subset and superset operators. The **not=** operator can be written as ~=.\n\nComparisons among classes is also supported (see **class**). If _C_ and _D_ are classes, _C_ <= _D_ means _D_ is a descendant of (inherits from) _C_. See **class**.\n"
    },
    {
      "title": "See also",
      "links": [
        "infix",
        "precedence",
        "int",
        "real",
        "string1",
        "set",
        "boolean",
        "enum",
        "string1"
      ],
      "raw_content": "See also <i><a href=\"infix.html\">infix</a></i> operators and <i><a href=\"precedence.html\">precedence</a></i> of operators. See also the <b><a href=\"int.html\">int</a></b>, <b><a href=\"real.html\">real</a></b>, <b><a href=\"string1.html\">string</a></b>, <b><a href=\"set.html\">set</a></b>, <b><a href=\"boolean.html\">boolean</a></b> and <b><a href=\"enum.html\">enum</a></b> types. See also <b><a href=\"string1.html\">string</a></b> comparison.<p>\r\n</p>",
      "text_content": " See also infix operators and precedence of operators. See also the int, real, string, set, boolean and enum types. See also string comparison.\r\n",
      "mdown_content": "See also _[infix](infix.html)_ operators and _[precedence](precedence.html)_ of operators. See also the **[int](int.html)**, **[real](real.html)**, **[string](string1.html)**, **[set](set.html)**, **[boolean](boolean.html)** and **[enum](enum.html)** types. See also **[string](string1.html)** comparison.\n"
    }
  ],
  "dependencies": [

  ]
}
