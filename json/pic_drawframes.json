{
  "title": "Pic.DrawFrames",
  "fileName": "pic_drawframes",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>Pic.DrawFrames</b> (<i>picIds</i> : <b>array</b> 1 .. * <b>of int</b>, <i>x</i>, <i>y</i>, <i>mode</i> : <b>int</b>,</font><br><table><tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\">&nbsp;</td>  <td colspan=\"7\"><font size=\"+1\"><i>numFrames</i>, <i>delayBetweenFrames</i> : <b>int</b>, <i>eraseAfter</i> : <b>boolean</b>)</font></td>\n</tr></table>\n<p>\r\n    </p>",
      "text_content": "Pic.DrawFrames (picIds : array 1 .. * of int, x, y, mode : int,    numFrames, delayBetweenFrames : int, eraseAfter : boolean)\r\n    ",
      "mdown_content": "**Pic.DrawFrames** (_picIds_ : **array** 1 .. * **of int**, _x_, _y_, _mode_ : **int**,       _numFrames_, _delayBetweenFrames_ : **int**, _eraseAfter_ : **boolean**)"
    },
    {
      "title": "Description",
      "links": [
        "pic_draw"
      ],
      "raw_content": "<b>Pic.DrawFrames</b> is used to draw a set of pictures stored in\r\n          an array of <b>int</b>s.  The pictures are displayed one at a time,\r\n          and there is a delay of <i>delayBetweenFrames</i> milliseconds\r\n          between frames. The <i>x</i>, <i>y</i>, and <i>mode</i> parameters\r\n          are the same as in <b><a href=\"pic_draw.html\">Pic.Draw</a></b>. The\r\n          <i>numFrames</i> parameter specifies the number of frames to be\r\n          drawn (the <i>picIds</i> array must be at least this big).  The\r\n          <i>eraseAfter</i> parameter specifies whether the last frame of the\r\n          animation should be left on the Run window when the call finishes.  \r\n          If <i>eraseAfter</i> is set to <b>true</b>, then the background is \r\n          restored after the last picture has been drawn and \r\n          <i>delayBetweenFrames</i> milliseconds has passed.<p>\r\n    </p>",
      "text_content": "Pic.DrawFrames is used to draw a set of pictures stored in\r\n          an array of ints.  The pictures are displayed one at a time,\r\n          and there is a delay of delayBetweenFrames milliseconds\r\n          between frames. The x, y, and mode parameters\r\n          are the same as in Pic.Draw. The\r\n          numFrames parameter specifies the number of frames to be\r\n          drawn (the picIds array must be at least this big).  The\r\n          eraseAfter parameter specifies whether the last frame of the\r\n          animation should be left on the Run window when the call finishes.  \r\n          If eraseAfter is set to true, then the background is \r\n          restored after the last picture has been drawn and \r\n          delayBetweenFrames milliseconds has passed.\r\n    ",
      "mdown_content": "**Pic.DrawFrames** is used to draw a set of pictures stored inan array of **int**s.  The pictures are displayed one at a time,and there is a delay of _delayBetweenFrames_ millisecondsbetween frames. The _x_, _y_, and _mode_ parametersare the same as in **[Pic.Draw](pic_draw.html)**. The_numFrames_ parameter specifies the number of frames to bedrawn (the _picIds_ array must be at least this big).  The_eraseAfter_ parameter specifies whether the last frame of theanimation should be left on the Run window when the call finishes.  If _eraseAfter_ is set to **true**, then the background is restored after the last picture has been drawn and _delayBetweenFrames_ milliseconds has passed.\n"
    },
    {
      "title": "Details",
      "links": [
        "pic_filenewframes",
        "pic_frames",
        "",
        "pic_drawframesback",
        "",
        "pic_drawframesback",
        "pic_frames"
      ],
      "raw_content": "GIF files can contain multiple frames (pictures).  Animated GIFs \r\n          function by each frame in the GIF one after another with a delay\r\n          between them.\r\n          <p>\r\n          Turing allows users to load multiple frame GIF images into a series\r\n          of pictures into an array using the \r\n          <b><a href=\"pic_filenewframes.html\">Pic.FileNewFrames</a></b> \r\n          procedure.  The user can determine how many frames are found in \r\n          the GIF file using <b><a href=\"pic_frames.html\">Pic.Frames</a></b>.  \r\n          The frames can be sequentially displayed using either \r\n          <b><a href=\"\">Pic.DrawFrames</a></b> or \r\n          <b><a href=\"pic_drawframesback.html\">Pic.DrawFramesBack</a></b> \r\n          which display the images one at a time.\r\n          (<b><a href=\"\">Pic.DrawFrames</a></b> returns \r\n          once all the images have been displayed, \r\n          <b><a href=\"pic_drawframesback.html\">Pic.DrawFramesBack</a></b> \r\n          returns immediately allowing the program to continue execution while \r\n          the frames are being displayed.\r\n          </p>\n<p>\r\n          <b><a href=\"pic_frames.html\">Pic.Frames</a></b> is a function which \r\n          returns the number of frames found in the GIF.  If it is used on a \r\n          GIF that does not contain multiple images, or on a non-GIF image file, \r\n          it returns 1.</p>\n<p>\r\n    </p>",
      "text_content": "GIF files can contain multiple frames (pictures).  Animated GIFs \r\n          function by each frame in the GIF one after another with a delay\r\n          between them.\r\n          \r\n          Turing allows users to load multiple frame GIF images into a series\r\n          of pictures into an array using the \r\n          Pic.FileNewFrames \r\n          procedure.  The user can determine how many frames are found in \r\n          the GIF file using Pic.Frames.  \r\n          The frames can be sequentially displayed using either \r\n          Pic.DrawFrames or \r\n          Pic.DrawFramesBack \r\n          which display the images one at a time.\r\n          (Pic.DrawFrames returns \r\n          once all the images have been displayed, \r\n          Pic.DrawFramesBack \r\n          returns immediately allowing the program to continue execution while \r\n          the frames are being displayed.\r\n          \r\n          Pic.Frames is a function which \r\n          returns the number of frames found in the GIF.  If it is used on a \r\n          GIF that does not contain multiple images, or on a non-GIF image file, \r\n          it returns 1.\r\n    ",
      "mdown_content": "GIF files can contain multiple frames (pictures).  Animated GIFs function by each frame in the GIF one after another with a delaybetween them.\n\nTuring allows users to load multiple frame GIF images into a seriesof pictures into an array using the **[Pic.FileNewFrames](pic_filenewframes.html)** procedure.  The user can determine how many frames are found in the GIF file using **[Pic.Frames](pic_frames.html)**.  The frames can be sequentially displayed using either **[Pic.DrawFrames]()** or **[Pic.DrawFramesBack](pic_drawframesback.html)** which display the images one at a time.(**[Pic.DrawFrames]()** returns once all the images have been displayed, **[Pic.DrawFramesBack](pic_drawframesback.html)** returns immediately allowing the program to continue execution while the frames are being displayed.\n\n**[Pic.Frames](pic_frames.html)** is a function which returns the number of frames found in the GIF.  If it is used on a GIF that does not contain multiple images, or on a non-GIF image file, it returns 1.\n"
    },
    {
      "title": "Example",
      "code": [
        "        % Determine the number of frames in \"globe.gif\"\r\n        var numFrames := Pic.Frames (\"globe.gif\")\r\n        % Load the picture\r\n        var delayTime : int\r\n        var pics : array 1 .. numFrames of int\r\n\r\n\tPic.FileNewFrames (\"globe.gif\", pics, delayTime)\r\n\tPic.DrawFrames (pics, 10, 10, picCopy, numFrames, 50, false)\r\n\tfor i : 1 .. numFramesPic.Free (pics (i))\r\n\tend for\r\n    "
      ],
      "raw_content": "The program loads a multiple frame GIF called \"globe.gif\" and \r\n          displays it.",
      "text_content": "The program loads a multiple frame GIF called \"globe.gif\" and \r\n          displays it.\r\n",
      "mdown_content": "The program loads a multiple frame GIF called \"globe.gif\" and displays it."
    },
    {
      "title": "Execute",
      "executables": [
        {
          "buttontext": "Launch Example Program",
          "name": "Pic.DrawFrames Example",
          "file": "Pic.DrawFrames.t"
        }
      ]
    },
    {
      "title": "Status",
      "raw_content": "Exported qualified.<p>\r\n\t  This means that you can only call the function by calling \r\n\t  <b>Pic.DrawFrames</b>, not by calling <b>DrawFrames</b>.</p>\n<p>\r\n    </p>",
      "text_content": "Exported qualified.\r\n\t  This means that you can only call the function by calling \r\n\t  Pic.DrawFrames, not by calling DrawFrames.\r\n    ",
      "mdown_content": "Exported qualified.\n\nThis means that you can only call the function by calling **Pic.DrawFrames**, not by calling **DrawFrames**.\n"
    },
    {
      "title": "See also",
      "links": [
        "pic_frames",
        "pic_filenewframes",
        "pic_drawframesback"
      ],
      "raw_content": "<b><a href=\"pic_frames.html\">Pic.Frames</a></b> for information on how\r\n          to determine the number of frames in a GIF image.<p>\r\n          <b><a href=\"pic_filenewframes.html\">Pic.FileNewFrames</a></b> for information\r\n          on how to load a GIF image with multiple frames into an array of \r\n          <b>int</b>s.</p>\n<p>\r\n          <b><a href=\"pic_drawframesback.html\">Pic.DrawFramesBack</a></b> for \r\n          information on how to sequentially display the images stored in array \r\n          of pictures while continuing to execute the program.</p>\n<p>\r\n    </p>",
      "text_content": "Pic.Frames for information on how\r\n          to determine the number of frames in a GIF image.\r\n          Pic.FileNewFrames for information\r\n          on how to load a GIF image with multiple frames into an array of \r\n          ints.\r\n          Pic.DrawFramesBack for \r\n          information on how to sequentially display the images stored in array \r\n          of pictures while continuing to execute the program.\r\n    ",
      "mdown_content": "**[Pic.Frames](pic_frames.html)** for information on howto determine the number of frames in a GIF image.\n\n**[Pic.FileNewFrames](pic_filenewframes.html)** for informationon how to load a GIF image with multiple frames into an array of **int**s.\n\n**[Pic.DrawFramesBack](pic_drawframesback.html)** for information on how to sequentially display the images stored in array of pictures while continuing to execute the program.\n"
    }
  ],
  "dependencies": [

  ]
}
