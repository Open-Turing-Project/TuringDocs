{
  "title": "shl",
  "fileName": "shl",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><i>A</i> <b>shl</b> <i>B</i><p>\r\n</p></font>",
      "text_content": " A shl B\r\n",
      "mdown_content": "_A_ **shl** _B_"
    },
    {
      "title": "Description",
      "raw_content": "The <b>shl</b> (shift left) operator produces the value of <i>A</i> shifted <i>B</i> bits to the left. Both A and B must be non-negative integers (natural numbers).<p>\r\n</p>",
      "text_content": " The shl (shift left) operator produces the value of A shifted B bits to the left. Both A and B must be non-negative integers (natural numbers).\r\n",
      "mdown_content": "The **shl** (shift left) operator produces the value of _A_ shifted _B_ bits to the left. Both A and B must be non-negative integers (natural numbers)."
    },
    {
      "title": "Example",
      "code": [
        "        var i, j : int\r\n        i := 2 # 11     % 2#11 = 3 (base 10)\r\n        j := i shl 2        % j becomes 2#1100 = 12 (base 10)"
      ],
      "raw_content": "Assign the base 2 value 11 to <i>i</i> and then shift it left by 2 places and assign the resulting base 2 value 1100 to <i>j</i>.<p>\r\n</p>",
      "text_content": " Assign the base 2 value 11 to i and then shift it left by 2 places and assign the resulting base 2 value 1100 to j.\r\n\r\n",
      "mdown_content": "Assign the base 2 value 11 to _i_ and then shift it left by 2 places and assign the resulting base 2 value 1100 to _j_."
    },
    {
      "title": "Details",
      "raw_content": "The <b>shl</b> operator is defined mathematically (in a machine-independent way) as follows:  <i>A</i> <b>shl</b> <i>B</i> = <i>A</i> <b>*</b> ( 2**<i>B </i>). Overflow occurs when the result exceeds the maximum value of the <b>nat4</b> (4-byte natural number) type.<p>\r\nValue <i>A</i> can be of any integer type (as long as it is non-negative) or any natural number type.</p>\n<p>\r\nThe <b>shl</b> operator has the same precedence as the * operator.</p>\n<p>\r\n</p>",
      "text_content": " The shl operator is defined mathematically (in a machine-independent way) as follows:  A shl B = A * ( 2**B ). Overflow occurs when the result exceeds the maximum value of the nat4 (4-byte natural number) type.\r\nValue A can be of any integer type (as long as it is non-negative) or any natural number type.\r\nThe shl operator has the same precedence as the * operator.\r\n",
      "mdown_content": "The **shl** operator is defined mathematically (in a machine-independent way) as follows:  _A_ **shl** _B_ = _A_ __*__ ( 2**_B_ ). Overflow occurs when the result exceeds the maximum value of the **nat4** (4-byte natural number) type.\nValue _A_ can be of any integer type (as long as it is non-negative) or any natural number type.\nThe **shl** operator has the same precedence as the * operator."
    },
    {
      "title": "See also",
      "links": [
        "shr",
        "or",
        "and",
        "xor",
        "explicitintegerconstant"
      ],
      "raw_content": "<b><a href=\"shr.html\">shr</a></b> (shift right), <b><a href=\"or.html\">or</a></b>, <b><a href=\"and.html\">and</a></b> and <b><a href=\"xor.html\">xor</a></b>, which also are bit manipulation operators that act on non-negative values. See also <b><a href=\"explicitintegerconstant.html\">explicitIntegerConstant</a></b> which describes values such as 2#1100.<p>\r\n</p>",
      "text_content": " shr (shift right), or, and and xor, which also are bit manipulation operators that act on non-negative values. See also explicitIntegerConstant which describes values such as 2#1100.\r\n",
      "mdown_content": "**[shr.html](shr)** (shift right), **[or.html](or)**, **[and.html](and)** and **[xor.html](xor)**, which also are bit manipulation operators that act on non-negative values. See also **[explicitintegerconstant.html](explicitIntegerConstant)** which describes values such as 2#1100."
    }
  ],
  "dependencies": [

  ]
}
