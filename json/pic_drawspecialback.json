{
  "title": "Pic.DrawSpecialBack",
  "fileName": "pic_drawspecialback",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>Pic.DrawSpecialBack</b> (<i>picID</i>, <i>x</i>, <i>y</i>, <i>mode</i>, <i>transition</i>, <i>duration</i>  : <b>int</b>)<p></p></font>",
      "text_content": "Pic.DrawSpecialBack (picID, x, y, mode, transition, duration  : int)\r\n    ",
      "mdown_content": "**Pic.DrawSpecialBack** (_picID_, _x_, _y_, _mode_, _transition_, _duration_  : **int**)\n"
    },
    {
      "title": "Description",
      "links": [
        "pic_drawspecial"
      ],
      "raw_content": "<b>Pic.DrawSpecialBack</b> is very similar to \r\n          <b><a href=\"pic_drawspecial.html\">Pic.DrawSpecial</a></b>.  The only\r\n          difference is that <b>Pic.DrawSpecialBack</b> returns immediately\r\n          after being called and program execution continues while the special\r\n          effect continues.  This allows you to continue to draw other graphics\r\n          while the special effect is continuing.<p>\r\n          For example, this procedure is necessary if you want to have two \r\n          pictures being drawn using special effects simultaneously.</p>\n<p>\r\n    </p>",
      "text_content": "Pic.DrawSpecialBack is very similar to \r\n          Pic.DrawSpecial.  The only\r\n          difference is that Pic.DrawSpecialBack returns immediately\r\n          after being called and program execution continues while the special\r\n          effect continues.  This allows you to continue to draw other graphics\r\n          while the special effect is continuing.\r\n          For example, this procedure is necessary if you want to have two \r\n          pictures being drawn using special effects simultaneously.\r\n    ",
      "mdown_content": "**Pic.DrawSpecialBack** is very similar to **[pic_drawspecial.html](Pic.DrawSpecial)**.  The onlydifference is that **Pic.DrawSpecialBack** returns immediatelyafter being called and program execution continues while the specialeffect continues.  This allows you to continue to draw other graphicswhile the special effect is continuing.\n\nFor example, this procedure is necessary if you want to have two pictures being drawn using special effects simultaneously.\n"
    },
    {
      "title": "Details",
      "raw_content": "If you are wish to have several images displayed at the same time\r\n          using special effects, you must use <b>Pic.DrawSpecialBack</b> to \r\n          display all the images but the last and then use \r\n          <b>Pic.DrawSpecial</b> to display the last image so that Turing will \r\n          wait until the special effects are completed before continuing \r\n          execution.<p>\r\n          If you want to draw the several special effects continuously over\r\n          the same location, do not use <b>Pic.DrawSpecialBack</b>.</p>\n<p>  \r\n          <tt><b>Pic.DrawSpecial</b> (<i>pic1</i>, 10, 10, <i>picCopy</i>, <i>picWipeLeftToRight</i>, 500)<br><b>Pic.DrawSpecial</b> (<i>pic2</i>, 10, 10, <i>picCopy</i>, <i>picFadeIn</i>, 1000)</tt></p>\n<p>\r\n          If you do, Turing will attempt to run each of the calls at the same\r\n          time, and most of the special effects will not be seen.</p>\n<p>\r\n    </p>",
      "text_content": "If you are wish to have several images displayed at the same time\r\n          using special effects, you must use Pic.DrawSpecialBack to \r\n          display all the images but the last and then use \r\n          Pic.DrawSpecial to display the last image so that Turing will \r\n          wait until the special effects are completed before continuing \r\n          execution.\r\n          If you want to draw the several special effects continuously over\r\n          the same location, do not use Pic.DrawSpecialBack.  \r\n          Pic.DrawSpecial (pic1, 10, 10, picCopy, picWipeLeftToRight, 500)Pic.DrawSpecial (pic2, 10, 10, picCopy, picFadeIn, 1000)\r\n          If you do, Turing will attempt to run each of the calls at the same\r\n          time, and most of the special effects will not be seen.\r\n    ",
      "mdown_content": "If you are wish to have several images displayed at the same timeusing special effects, you must use **Pic.DrawSpecialBack** to display all the images but the last and then use **Pic.DrawSpecial** to display the last image so that Turing will wait until the special effects are completed before continuing execution.\n\nIf you want to draw the several special effects continuously overthe same location, do not use **Pic.DrawSpecialBack**.\n\n`**Pic.DrawSpecial** (_pic1_, 10, 10, _picCopy_, _picWipeLeftToRight_, 500)**Pic.DrawSpecial** (_pic2_, 10, 10, _picCopy_, _picFadeIn_, 1000)`\n\nIf you do, Turing will attempt to run each of the calls at the sametime, and most of the special effects will not be seen.\n"
    },
    {
      "title": "Description",
      "links": [
        "pic_drawspecial",
        "pic_drawspecial"
      ],
      "raw_content": "<b>Pic.DrawSpecialBack</b> is used to draw a picture on the screen\r\n          with a special effect such as a wipe, a slide, or a fade-in. Note that \r\n          all the parameters are identical to the parameters of\r\n          <b><a href=\"pic_drawspecial.html\">Pic.DrawSpecial</a></b>.\r\n          The picture is drawn with the lower left corner at \r\n          (<i>x</i>, <i>y</i>). The <i>duration</i> specifies how long the\r\n          transition should take in milliseconds.  For example, a fade-in could\r\n          be specified to last 1/2 a second by using a duration of 500.<p>\r\n\t  The <i>mode</i> parameter is the same as in <b>Pic.New</b> and has \r\n\t  one of the following values:</p>\n<p>\r\n\t  </p>\n<table>\n<tr valign=\"top\">\n<td><i>picCopy</i></td>\r\n\t      <td width=\"10\">&nbsp;</td>\r\n\t      <td>This draws the picture on top of what was underneath, \r\n\t          obscuring it completely.</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td><i>picXor</i></td>\r\n\t      <td width=\"10\">&nbsp;</td>\r\n\t      <td>This draws the picture XORing it with the background. \r\n\t          In DOS, you can use this function to do animation. \r\n\t\t  Drawing an object on top of itself with XOR erases \r\n\t\t  it and restores the background.</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td><i>picMerge</i></td>\r\n\t      <td width=\"10\">&nbsp;</td>\r\n\t      <td>This draws the picture like <i>picCopy</i> except \r\n\t          that any occurrence of the background color in the \r\n\t\t  picture is not drawn to the screen. This allows you \r\n\t\t  to draw an irregularly-shaped object and draw it to \r\n\t\t  the screen.</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td><i>picUnderMerge</i></td>\r\n\t      <td width=\"10\">&nbsp;</td>\r\n\t      <td>This draws the picture, but only where the background \r\n\t          color was displayed underneath it. The effect of this \r\n\t\t  is to make the picture appear to be displayed behind \r\n\t\t  the background.</td>\r\n\t    </tr>\n</table>\n<p>\r\n\t  See <b><a href=\"pic_drawspecial.html\">Pic.DrawSpecial</a></b> for the\r\n\t  list of possible values for the <i>transition</i> parameter.</p>\n<p>\r\n    </p>",
      "text_content": "Pic.DrawSpecialBack is used to draw a picture on the screen\r\n          with a special effect such as a wipe, a slide, or a fade-in. Note that \r\n          all the parameters are identical to the parameters of\r\n          Pic.DrawSpecial.\r\n          The picture is drawn with the lower left corner at \r\n          (x, y). The duration specifies how long the\r\n          transition should take in milliseconds.  For example, a fade-in could\r\n          be specified to last 1/2 a second by using a duration of 500.\r\n\t  The mode parameter is the same as in Pic.New and has \r\n\t  one of the following values:\r\n\t  picCopy\r\n\t       \r\n\t      This draws the picture on top of what was underneath, \r\n\t          obscuring it completely.\r\n\t    picXor\r\n\t       \r\n\t      This draws the picture XORing it with the background. \r\n\t          In DOS, you can use this function to do animation. \r\n\t\t  Drawing an object on top of itself with XOR erases \r\n\t\t  it and restores the background.\r\n\t    picMerge\r\n\t       \r\n\t      This draws the picture like picCopy except \r\n\t          that any occurrence of the background color in the \r\n\t\t  picture is not drawn to the screen. This allows you \r\n\t\t  to draw an irregularly-shaped object and draw it to \r\n\t\t  the screen.\r\n\t    picUnderMerge\r\n\t       \r\n\t      This draws the picture, but only where the background \r\n\t          color was displayed underneath it. The effect of this \r\n\t\t  is to make the picture appear to be displayed behind \r\n\t\t  the background.\r\n\t    \r\n\t  See Pic.DrawSpecial for the\r\n\t  list of possible values for the transition parameter.\r\n    ",
      "mdown_content": "**Pic.DrawSpecialBack** is used to draw a picture on the screenwith a special effect such as a wipe, a slide, or a fade-in. Note that all the parameters are identical to the parameters of**[pic_drawspecial.html](Pic.DrawSpecial)**.The picture is drawn with the lower left corner at (_x_, _y_). The _duration_ specifies how long thetransition should take in milliseconds.  For example, a fade-in couldbe specified to last 1/2 a second by using a duration of 500.\n\nThe _mode_ parameter is the same as in **Pic.New** and has one of the following values:\n\n\n_picCopy_   This draws the picture on top of what was underneath, obscuring it completely.\n_picXor_   This draws the picture XORing it with the background. In DOS, you can use this function to do animation. Drawing an object on top of itself with XOR erases it and restores the background.\n_picMerge_   This draws the picture like _picCopy_ except that any occurrence of the background color in the picture is not drawn to the screen. This allows you to draw an irregularly-shaped object and draw it to the screen.\n_picUnderMerge_   This draws the picture, but only where the background color was displayed underneath it. The effect of this is to make the picture appear to be displayed behind the background.\n\n\nSee **[pic_drawspecial.html](Pic.DrawSpecial)** for thelist of possible values for the _transition_ parameter.\n"
    },
    {
      "title": "Details",
      "raw_content": "The <b>Pic.DrawSpecialBack</b> requires a moderately fast machine to \r\n          operate successfully (Pentium III or higher). The <i>picFadeIn</i>\r\n          and <i>picBlend</i> transitions do not work well on 8-bit (256 color)\r\n\t  displays.  On Microsoft Windows machines, you can determine the \r\n\t  bit-depth of the display (the number of colors available) by \r\n\t  selecting the <i>Display</i> control panel from the <i>Start</i> \r\n\t  menu.  You can also use the<p>\r\n\t  <tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t  <b>Config.Display</b> (<b>cdNumMaxColors</b>)</tt></p>\n<p>\r\n\t  function to determine the bit-depth of the display (anything \r\n\t  <b>over</b> 256 colors will produce acceptable results).</p>\n<p>\r\n    </p>",
      "text_content": "The Pic.DrawSpecialBack requires a moderately fast machine to \r\n          operate successfully (Pentium III or higher). The picFadeIn\r\n          and picBlend transitions do not work well on 8-bit (256 color)\r\n\t  displays.  On Microsoft Windows machines, you can determine the \r\n\t  bit-depth of the display (the number of colors available) by \r\n\t  selecting the Display control panel from the Start \r\n\t  menu.  You can also use the\r\n\t        \r\n\t  Config.Display (cdNumMaxColors)\r\n\t  function to determine the bit-depth of the display (anything \r\n\t  over 256 colors will produce acceptable results).\r\n    ",
      "mdown_content": "The **Pic.DrawSpecialBack** requires a moderately fast machine to operate successfully (Pentium III or higher). The _picFadeIn_and _picBlend_ transitions do not work well on 8-bit (256 color)displays.  On Microsoft Windows machines, you can determine the bit-depth of the display (the number of colors available) by selecting the _Display_ control panel from the _Start_ menu.  You can also use the\n\n`      **Config.Display** (**cdNumMaxColors**)`\n\nfunction to determine the bit-depth of the display (anything **over** 256 colors will produce acceptable results).\n"
    },
    {
      "title": "Details",
      "raw_content": "If the <b>Pic.DrawSpecialBack</b> call fails, <b>Error.Last</b> will return a \r\n          non-zero value indicating the reason for the failure. \r\n\t  <b>Error.LastMsg</b> will return a string which contains the textual \r\n\t  version of the error.<p>\r\n    </p>",
      "text_content": "If the Pic.DrawSpecialBack call fails, Error.Last will return a \r\n          non-zero value indicating the reason for the failure. \r\n\t  Error.LastMsg will return a string which contains the textual \r\n\t  version of the error.\r\n    ",
      "mdown_content": "If the **Pic.DrawSpecialBack** call fails, **Error.Last** will return a non-zero value indicating the reason for the failure. **Error.LastMsg** will return a string which contains the textual version of the error.\n"
    },
    {
      "title": "Example",
      "code": [
        "        var redID, blueID: int\r\n        Draw.FillStar (0, 0, 100, 100, brightred)\r\n        redID := Pic.New (0, 0, 100, 100)\r\n        cls\r\n        Draw.FillOval (50, 50, 50, 50, brightblue)\r\n        blueID := Pic.New (0, 0, 100, 100)\r\n        cls\r\n\tPic.DrawSpecialBack (redID, 10, 10, picCopy, picWipeLeftToRightNoBar, 1000)\r\n\tPic.DrawSpecial (blueID, 160, 10, picCopy, picWipeRightToLeftNoBar, 1000)\r\n\tPic.DrawSpecialBack (blueID, 10, 10, picCopy, picSlideLeftToRightNoBar, 1000)\r\n\tPic.DrawSpecial (redID, 160, 10, picCopy, picSlideRightToLeftNoBar, 1000)\r\n\tPic.DrawSpecialBack (redID, 10, 10, picCopy, picGrowRightToLeftNoBar, 1000)\r\n\tPic.DrawSpecial (blueID, 160, 10, picCopy, picGrowLeftToRightNoBar, 1000)\r\n\tPic.DrawSpecialBack (blueID, 10, 10, picCopy, picWipeTopToBottomNoBar, 1000)\r\n\tPic.DrawSpecial (redID, 160, 10, picCopy, picWipeTopToBottomNoBar, 1000)\r\n\tPic.DrawSpecialBack (redID, 10, 10, picCopy, picFadeIn, 1000)\r\n\tPic.DrawSpecial (blueID, 160, 10, picCopy, picFadeIn, 1000)\r\n        Pic.Free (redID)\r\n        Pic.Free (blueID)"
      ],
      "raw_content": "The program draws a blue star on the screen, then a red circle, then\r\n          proceeds to have to have the two replace each simultaneously, \r\n          side-by-side.<p>\r\n</p>\n<p>\r\n    </p>",
      "text_content": "The program draws a blue star on the screen, then a red circle, then\r\n          proceeds to have to have the two replace each simultaneously, \r\n          side-by-side.\r\n\r\n    ",
      "mdown_content": "The program draws a blue star on the screen, then a red circle, thenproceeds to have to have the two replace each simultaneously, side-by-side.\n\n\n"
    },
    {
      "title": "Execute",
      "executables": [
        {
          "buttontext": "Launch Example Program",
          "name": "Pic.DrawSpecialBack Example",
          "file": "Pic.DrawSpecialBack.t"
        }
      ]
    },
    {
      "title": "Status",
      "raw_content": "Exported qualified.<p>\r\n\t  This means that you can only call the function by calling \r\n\t  <b>Pic.DrawSpecialBack</b>, not by calling <b>DrawSpecialBack</b>.</p>\n<p>\r\n    </p>",
      "text_content": "Exported qualified.\r\n\t  This means that you can only call the function by calling \r\n\t  Pic.DrawSpecialBack, not by calling DrawSpecialBack.\r\n    ",
      "mdown_content": "Exported qualified.\n\nThis means that you can only call the function by calling **Pic.DrawSpecialBack**, not by calling **DrawSpecialBack**.\n"
    },
    {
      "title": "See also",
      "links": [
        "pic_draw",
        "pic_drawspecial"
      ],
      "raw_content": "<b><a href=\"pic_draw.html\">Pic.Draw</a></b> for information on the meaning\r\n          of the <i>mode</i> argument.<p>\r\n          <b><a href=\"pic_drawspecial.html\">Pic.DrawSpecial</a></b> for \r\n          information on how to draw special effects and wait for completion\r\n          of the effect.</p>\n<p>\r\n    </p>",
      "text_content": "Pic.Draw for information on the meaning\r\n          of the mode argument.\r\n          Pic.DrawSpecial for \r\n          information on how to draw special effects and wait for completion\r\n          of the effect.\r\n    ",
      "mdown_content": "**[pic_draw.html](Pic.Draw)** for information on the meaningof the _mode_ argument.\n\n**[pic_drawspecial.html](Pic.DrawSpecial)** for information on how to draw special effects and wait for completionof the effect.\n"
    }
  ],
  "dependencies": [

  ]
}
