{
  "title": "Pic.DrawSpecial",
  "fileName": "pic_drawspecial",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>Pic.DrawSpecial</b> (<i>picID</i>, <i>x</i>, <i>y</i>, <i>mode</i>, <i>transition</i>, <i>duration</i>  : <b>int</b>)<p></p></font>",
      "mdown_content": "**Pic.DrawSpecial** (*picID*, *x*, *y*, *mode*, *transition*, *duration*  : **int**)"
    },
    {
      "title": "Description",
      "images": [
        "pic_drawspecial01.gif",
        "pic_drawspecial05.gif",
        "pic_drawspecial06.gif",
        "pic_drawspecial02.gif",
        "pic_drawspecial07.gif",
        "pic_drawspecial08.gif",
        "pic_drawspecial09.gif",
        "pic_drawspecial03.gif",
        "pic_drawspecial04.gif"
      ],
      "raw_content": "<b>Pic.DrawSpecial</b> is used to draw a picture on the screen with a\r\n          special effect such as a wipe, a slide, or a fade-in. \r\n          The picture is drawn with the lower left corner at \r\n          (<i>x</i>, <i>y</i>). The <i>duration</i> specifies how long the\r\n          transition should take in milliseconds.  For example, a fade-in could\r\n          be specified to last 1/2 a second by using a duration of 500.<p>\r\n\t  The <i>mode</i> parameter is the same as in <b>Pic.New</b> and has \r\n\t  one of the following values:</p>\n<p>\r\n\t  </p>\n<table>\n<tr valign=\"top\">\n<td><i>picCopy</i></td>\r\n\t      <td width=\"10\">&nbsp;</td>\r\n\t      <td>This draws the picture on top of what was underneath, \r\n\t          obscuring it completely.</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td><i>picXor</i></td>\r\n\t      <td width=\"10\">&nbsp;</td>\r\n\t      <td>This draws the picture XORing it with the background. \r\n\t          In DOS, you can use this function to do animation. \r\n\t\t  Drawing an object on top of itself with XOR erases \r\n\t\t  it and restores the background.</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td><i>picMerge</i></td>\r\n\t      <td width=\"10\">&nbsp;</td>\r\n\t      <td>This draws the picture like <i>picCopy</i> except \r\n\t          that any occurrence of the background color in the \r\n\t\t  picture is not drawn to the screen. This allows you \r\n\t\t  to draw an irregularly-shaped object and draw it to \r\n\t\t  the screen.</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td><i>picUnderMerge</i></td>\r\n\t      <td width=\"10\">&nbsp;</td>\r\n\t      <td>This draws the picture, but only where the background \r\n\t          color was displayed underneath it. The effect of this \r\n\t\t  is to make the picture appear to be displayed behind \r\n\t\t  the background.</td>\r\n\t    </tr>\n</table>\n<p>\r\n\t  The <i>transition</i> parameter indicates the special effect and has\r\n\t  one of the following values:</p>\n<p>\r\n\t  </p>\n<table border=\"1\">\n<tr valign=\"top\">\n<td><i>picWipeLeftToRight</i></td>\r\n\t      <td>The picture appears as a solid black bar sweeps from left to\r\n\t          right, \"revealing\" the new picture as the screen underneath\r\n\t          the picture is replaced.<p>\r\n\t\t\t  In the picture below, \"to Turing\" is replacing the \"Welcome\"\r\n\t\t\t  underneath as the bar sweeps from left to right.\r\n\t  \t  </p>\n<center></center>\r\n\t          <center><b>picWipeLeftToRight - half way through transition</b></center>\n<p></p>\n</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td>\n<i>picWipeRightToLeft</i>, <i>picWipeTopToBottom</i>, \r\n\t          <i>picWipeBottomToTop</i>\n</td>\r\n\t      <td>As <i>picWipeLeftToRight</i>, except the bar sweeps in \r\n\t          different directions.</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td><i>picWipeUpperLeftToLowerRight</i></td>\r\n\t      <td>The picture appears as a solid black bar sweeps from the upper\r\n\t\t      left corner down to the lower right, \"revealing\" the new picture \r\n\t\t\t  as the screen underneath the picture is replaced.<p>\r\n\t\t\t  In the picture below \"to Turing\" is replacing the \"Welcome\"\r\n\t\t\t  underneath as the bar sweeps from upper-left to lower-right.\r\n\t  \t  </p>\n<center></center>\r\n\t          <center><b>picWipeUpperLeftToLowerRight - half way through transition</b></center>\n<p></p>\n</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td>\n<i>picWipeUpperRightToLowerLeft</i>, <i>picWipeLowerLeftToUpperRight</i>, \r\n\t          <i>picWipeLowerRightToUpperLeft</i>\n</td>\r\n\t      <td>As <i>picWipeLeftToRight</i>, except the bar sweeps in \r\n\t          different directions.</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td>\n<i>picWipeCentreToEdge</i>, <i>picWipeCenterToEdge</i>\n</td>\r\n\t      <td>The picture appears inside an expanding black outlined box as it \r\n\t\t      sweeps from the centre out to the edges, \"revealing\" the new \r\n\t\t\t  picture as the screen underneath the picture is replaced.<p>\r\n\t\t\t  In the picture below, \"to Turing\" is replacing the \"Welcome\"\r\n\t\t\t  underneath as the box expands from the centre out.\r\n\t  \t  </p>\n<center></center>\r\n\t          <center><b>picWipeCentreToEdge - half way through transition</b></center>\n<p></p>\n</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td>\n<i>picWipeLeftToRightNoBar</i>, <i>picWipeRightToLeftNoBar</i>, \r\n\t          <i>picWipeTopToBottomNoBar</i>, <i>picWipeBottomToTopNoBar</i>\r\n\t          <i>picWipeUpperLeftToLowerRightNoBar</i>, <i>picWipeUpperRightToLowerLeftNoBar</i>, \r\n\t          <i>picWipeLowerLeftToUpperRightNoBar</i>, <i>picWipeLowerRightToUpperLeftNoBar</i>,\r\n\t\t\t  <i>picWipeCentreToEdgeNoBar</i>, <i>picWipeCenterToEdgeNoBar</i>\n</td>\r\n\t      <td>As the constants above, expect there is no bar to mark the\r\n\t          sweep across. The bar generally looks better when displaying\r\n\t          an image over top of a similar one. No bar is usually\r\n\t          preferable when the images are completely different (as in\r\n\t          two photographs, and so on).</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td><i>picSlideLeftToRight</i></td>\r\n\t      <td>The picture \"slides in\" from the left as a solid black bar \r\n\t          sweeps from left to right, \"pushing\" the screen underneath\r\n\t          off the right edge of the drawing area.<p>\r\n\t\t\t  In the picture below \"to Turing\" is replacing the \"Welcome\"\r\n\t\t\t  originally present, \"pushing\" the \"Welcome\" to the right\r\n\t\t\t  as \"to Turing\" slides in from the left.\r\n\t  \t  </p>\n<center></center>\r\n\t          <center><b>picSlideLeftToRight - half way through transition</b></center>\n<p></p>\n</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td>\n<i>picSlideRightToLeft</i>, <i>picSlideTopToBottom</i>, \r\n\t          <i>picSlideBottomToTop</i>\n</td>\r\n\t      <td>As <i>picSlideLeftToRight</i>, except the bar sweeps in \r\n\t          different directions.</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td>\n<i>picSlideLeftToRightNoBar</i>, <i>picSlideRightToLeftNoBar</i>, \r\n\t          <i>picSlideTopToBottomNoBar</i>, <i>picSlideBottomToTopNoBar</i>\n</td>\r\n\t      <td>As the constants above, expect there is no bar to mark the\r\n\t          sweep across. The bar generally looks better when displaying\r\n\t          an image over top of a similar one. No bar is often\r\n\t          preferable when the images are completely different (as in\r\n\t          two photographs, and so on).</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td><i>picGrowLeftToRight</i></td>\r\n\t      <td>The picture \"grows\" from the left as a solid black bar \r\n\t          sweeps from left to right, \"squeezing\" the screen underneath\r\n\t          off the right edge of the drawing area.<p>\r\n\t\t\t  In the picture below \"to Turing\" is replacing the \"Welcome\"\r\n\t\t\t  originally present, \"squeezing\" the \"Welcome\" to the right\r\n\t\t\t  as \"to Turing\" \"grows\" from the left.\r\n\t  \t  </p>\n<center></center>\r\n\t          <center><b>picGrowLeftToRight - half way through transition</b></center>\n<p></p>\n</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td>\n<i>picGrowRightToLeft</i>, <i>picGrowTopToBottom</i>, \r\n\t          <i>picGrowBottomToTop</i>\n</td>\r\n\t      <td>As <i>picGrowLeftToRight</i>, except the bar sweeps in \r\n\t          different directions.</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td>\n<i>picGrowCentreToEdge</i>, <i>picGrowCenterToEdge</i>\n</td>\r\n\t      <td>The picture \"grows\" from the centre as a outlined black box\r\n\t          sweeps from outward, replacing the screen underneath.<p>\r\n\t\t\t  In the picture below \"to Turing\" is replacing the \"Welcome\"\r\n\t\t\t  originally present, as \"to Turing\" grows for the centre.\r\n\t  \t  </p>\n<center></center>\r\n\t          <center><b>picGrowCentreToEdge - half way through transition</b></center>\n<p></p>\n</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td><i>picGrowLowerLeftToUpperRight</i></td>\r\n\t      <td>The picture \"grows\" from the lower-left corner as a outlined\r\n\t\t      black box sweeps right and upward, replacing the screen \r\n\t\t\t  underneath.<p>\r\n\t\t\t  In the picture below \"to Turing\" is replacing the \"Welcome\"\r\n\t\t\t  originally present, as \"to Turing\" \"grows\" from the lower-left.\r\n\t  \t  </p>\n<center></center>\r\n\t          <center><b>picGrowLowerLeftToUpperRight - half way through transition</b></center>\n<p></p>\n</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td>\n<i>picGrowUpperLeftToLowerRight</i>, <i>picGrowLowerRightToUpperLeft</i>, \r\n\t          <i>picGrowUpperRightToLowerLeft</i>\n</td>\r\n\t      <td>As <i>picGrowLowerLeftToUpperRight</i>, except the box sweeps in \r\n\t          different directions.</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td>\n<i>picGrowLeftToRightNoBar</i>, <i>picGrowRightToLeftNoBar</i>, \r\n\t          <i>picGrowTopToBottomNoBar</i>, <i>picGrowBottomToTopNoBar</i>\r\n\t          <i>picGrowUpperLeftToLowerRightNoBar</i>, <i>picGrowLowerLeftToUpperRightNoBar</i>, \r\n\t          <i>picGrowUpperRightToLowerLeftNoBar</i>, <i>picGrowLowerRightToUpperLeftNoBar</i>,\r\n\t\t\t  <i>picGrowCentreToEdgeNoBar</i>, <i>picGrowCenterToEdgeNoBar</i>\n</td>\r\n\t      <td>As the constants above, expect there is no bar to mark the\r\n\t          sweep across. The bar generally looks better when displaying\r\n\t          an image over top of a similar one. No bar is usually\r\n\t          preferable when the images are completely different (as in\r\n\t          two photographs, and so on).</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td><i>picFadeIn</i></td>\r\n\t      <td>The picture \"fades in\" over top of the image underneath it.\r\n\t          At the end of the transition, the new image completely \r\n\t          replaces the image underneath it.<p>\r\n\t  \t  </p>\n<center></center>\r\n\t          <center><b>picFadeIn - half way through transition</b></center>\n<p></p>\n</td>\r\n\t    </tr>\n<tr valign=\"top\">\n<td><i>picBlend</i></td>\r\n\t      <td>This transition is somewhat different because it doesn't take\r\n\t          any time to execute.  Instead, <i>picBlend</i> causes the\r\n\t          new image to be blended with the background.  The \r\n\t          <i>picBlend</i> constant can be used by itself, in which case,\r\n\t          the final image is 70% the new image, 30% the old image.  You\r\n\t          can also add a number from 1 to 100 to <i>picBlend</i>, in \r\n\t          which case, the blend is whatever was added from (1-100) of\r\n\t          the new image over top of the old image.  (i.e. a transition\r\n\t          of <i>picBlend</i> + 15 would display an image that is \r\n\t          composed of 15% the new image and 85% the old image.)<p>\r\n\t  \t  </p>\n<center></center>\r\n\t          <center><b>picBlend - red star blended with blue circle</b></center>\n<p></p>\n</td>\r\n\t    </tr>\n</table>\n<p>\r\n    </p>",
      "mdown_content": "**Pic.DrawSpecial** is used to draw a picture on the screen with a\nspecial effect such as a wipe, a slide, or a fade-in. \nThe picture is drawn with the lower left corner at \n(*x*, *y*). The *duration* specifies how long the\ntransition should take in milliseconds.  For example, a fade-in could\nbe specified to last 1/2 a second by using a duration of 500.\nThe *mode* parameter is the same as in **Pic.New** and has \none of the following values:\n\n\n*picCopy*\n \nThis draws the picture on top of what was underneath, \nobscuring it completely.\n*picXor*\n \nThis draws the picture XORing it with the background. \nIn DOS, you can use this function to do animation. \nDrawing an object on top of itself with XOR erases \nit and restores the background.\n*picMerge*\n \nThis draws the picture like *picCopy* except \nthat any occurrence of the background color in the \npicture is not drawn to the screen. This allows you \nto draw an irregularly-shaped object and draw it to \nthe screen.\n*picUnderMerge*\n \nThis draws the picture, but only where the background \ncolor was displayed underneath it. The effect of this \nis to make the picture appear to be displayed behind \nthe background.\n\nThe *transition* parameter indicates the special effect and has\none of the following values:\n\n\n*picWipeLeftToRight*\nThe picture appears as a solid black bar sweeps from left to\nright, \"revealing\" the new picture as the screen underneath\nthe picture is replaced.\nIn the picture below, \"to Turing\" is replacing the \"Welcome\"\nunderneath as the bar sweeps from left to right.\n\n\n**picWipeLeftToRight - half way through transition**\n\n\n\n*picWipeRightToLeft*, *picWipeTopToBottom*, \n*picWipeBottomToTop*\n\nAs *picWipeLeftToRight*, except the bar sweeps in \ndifferent directions.\n*picWipeUpperLeftToLowerRight*\nThe picture appears as a solid black bar sweeps from the upper\nleft corner down to the lower right, \"revealing\" the new picture \nas the screen underneath the picture is replaced.\nIn the picture below \"to Turing\" is replacing the \"Welcome\"\nunderneath as the bar sweeps from upper-left to lower-right.\n\n\n**picWipeUpperLeftToLowerRight - half way through transition**\n\n\n\n*picWipeUpperRightToLowerLeft*, *picWipeLowerLeftToUpperRight*, \n*picWipeLowerRightToUpperLeft*\n\nAs *picWipeLeftToRight*, except the bar sweeps in \ndifferent directions.\n\n*picWipeCentreToEdge*, *picWipeCenterToEdge*\n\nThe picture appears inside an expanding black outlined box as it \nsweeps from the centre out to the edges, \"revealing\" the new \npicture as the screen underneath the picture is replaced.\nIn the picture below, \"to Turing\" is replacing the \"Welcome\"\nunderneath as the box expands from the centre out.\n\n\n**picWipeCentreToEdge - half way through transition**\n\n\n\n*picWipeLeftToRightNoBar*, *picWipeRightToLeftNoBar*, \n*picWipeTopToBottomNoBar*, *picWipeBottomToTopNoBar*\n*picWipeUpperLeftToLowerRightNoBar*, *picWipeUpperRightToLowerLeftNoBar*, \n*picWipeLowerLeftToUpperRightNoBar*, *picWipeLowerRightToUpperLeftNoBar*,\n*picWipeCentreToEdgeNoBar*, *picWipeCenterToEdgeNoBar*\n\nAs the constants above, expect there is no bar to mark the\nsweep across. The bar generally looks better when displaying\nan image over top of a similar one. No bar is usually\npreferable when the images are completely different (as in\ntwo photographs, and so on).\n*picSlideLeftToRight*\nThe picture \"slides in\" from the left as a solid black bar \nsweeps from left to right, \"pushing\" the screen underneath\noff the right edge of the drawing area.\nIn the picture below \"to Turing\" is replacing the \"Welcome\"\noriginally present, \"pushing\" the \"Welcome\" to the right\nas \"to Turing\" slides in from the left.\n\n\n**picSlideLeftToRight - half way through transition**\n\n\n\n*picSlideRightToLeft*, *picSlideTopToBottom*, \n*picSlideBottomToTop*\n\nAs *picSlideLeftToRight*, except the bar sweeps in \ndifferent directions.\n\n*picSlideLeftToRightNoBar*, *picSlideRightToLeftNoBar*, \n*picSlideTopToBottomNoBar*, *picSlideBottomToTopNoBar*\n\nAs the constants above, expect there is no bar to mark the\nsweep across. The bar generally looks better when displaying\nan image over top of a similar one. No bar is often\npreferable when the images are completely different (as in\ntwo photographs, and so on).\n*picGrowLeftToRight*\nThe picture \"grows\" from the left as a solid black bar \nsweeps from left to right, \"squeezing\" the screen underneath\noff the right edge of the drawing area.\nIn the picture below \"to Turing\" is replacing the \"Welcome\"\noriginally present, \"squeezing\" the \"Welcome\" to the right\nas \"to Turing\" \"grows\" from the left.\n\n\n**picGrowLeftToRight - half way through transition**\n\n\n\n*picGrowRightToLeft*, *picGrowTopToBottom*, \n*picGrowBottomToTop*\n\nAs *picGrowLeftToRight*, except the bar sweeps in \ndifferent directions.\n\n*picGrowCentreToEdge*, *picGrowCenterToEdge*\n\nThe picture \"grows\" from the centre as a outlined black box\nsweeps from outward, replacing the screen underneath.\nIn the picture below \"to Turing\" is replacing the \"Welcome\"\noriginally present, as \"to Turing\" grows for the centre.\n\n\n**picGrowCentreToEdge - half way through transition**\n\n\n*picGrowLowerLeftToUpperRight*\nThe picture \"grows\" from the lower-left corner as a outlined\nblack box sweeps right and upward, replacing the screen \nunderneath.\nIn the picture below \"to Turing\" is replacing the \"Welcome\"\noriginally present, as \"to Turing\" \"grows\" from the lower-left.\n\n\n**picGrowLowerLeftToUpperRight - half way through transition**\n\n\n\n*picGrowUpperLeftToLowerRight*, *picGrowLowerRightToUpperLeft*, \n*picGrowUpperRightToLowerLeft*\n\nAs *picGrowLowerLeftToUpperRight*, except the box sweeps in \ndifferent directions.\n\n*picGrowLeftToRightNoBar*, *picGrowRightToLeftNoBar*, \n*picGrowTopToBottomNoBar*, *picGrowBottomToTopNoBar*\n*picGrowUpperLeftToLowerRightNoBar*, *picGrowLowerLeftToUpperRightNoBar*, \n*picGrowUpperRightToLowerLeftNoBar*, *picGrowLowerRightToUpperLeftNoBar*,\n*picGrowCentreToEdgeNoBar*, *picGrowCenterToEdgeNoBar*\n\nAs the constants above, expect there is no bar to mark the\nsweep across. The bar generally looks better when displaying\nan image over top of a similar one. No bar is usually\npreferable when the images are completely different (as in\ntwo photographs, and so on).\n*picFadeIn*\nThe picture \"fades in\" over top of the image underneath it.\nAt the end of the transition, the new image completely \nreplaces the image underneath it.\n\n\n**picFadeIn - half way through transition**\n\n\n*picBlend*\nThis transition is somewhat different because it doesn't take\nany time to execute.  Instead, *picBlend* causes the\nnew image to be blended with the background.  The \n*picBlend* constant can be used by itself, in which case,\nthe final image is 70% the new image, 30% the old image.  You\ncan also add a number from 1 to 100 to *picBlend*, in \nwhich case, the blend is whatever was added from (1-100) of\nthe new image over top of the old image.  (i.e. a transition\nof *picBlend* + 15 would display an image that is \ncomposed of 15% the new image and 85% the old image.)\n\n\n**picBlend - red star blended with blue circle**\n\n\n\n"
    },
    {
      "title": "Execute",
      "executables": [
        {
          "buttontext": "Launch Drawing Transitions Program",
          "name": "Drawing Transitions Example",
          "file": "Pic.DrawSpecial.t"
        }
      ]
    },
    {
      "title": "Details",
      "raw_content": "The <b>Pic.DrawSpecial</b> requires a moderately fast machine to \r\n          operate successfully (Pentium III or higher). The <i>picFadeIn</i>\r\n          and <i>picBlend</i> transitions do not work well on 8-bit (256 color)\r\n\t  displays.  On Microsoft Windows machines, you can determine the \r\n\t  bit-depth of the display (the number of colors available) by \r\n\t  selecting the <i>Display</i> control panel from the <i>Start</i> \r\n\t  menu.  You can also use the<p>\r\n\t  <tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t  <b>Config.Display</b> (<b>cdNumMaxColors</b>)</tt></p>\n<p>\r\n\t  function to determine the bit-depth of the display (anything \r\n\t  <b>over</b> 256 colors will produce acceptable results).</p>\n<p>\r\n    </p>",
      "mdown_content": "The **Pic.DrawSpecial** requires a moderately fast machine to \noperate successfully (Pentium III or higher). The *picFadeIn*\nand *picBlend* transitions do not work well on 8-bit (256 color)\ndisplays.  On Microsoft Windows machines, you can determine the \nbit-depth of the display (the number of colors available) by \nselecting the *Display* control panel from the *Start* \nmenu.  You can also use the\n      \n**Config.Display** (**cdNumMaxColors**)\n\nfunction to determine the bit-depth of the display (anything \n**over** 256 colors will produce acceptable results).\n\n"
    },
    {
      "title": "Details",
      "raw_content": "If the <b>Pic.DrawSpecial</b> call fails, <b>Error.Last</b> will return a \r\n          non-zero value indicating the reason for the failure. \r\n\t  <b>Error.LastMsg</b> will return a string which contains the textual \r\n\t  version of the error.<p>\r\n    </p>",
      "mdown_content": "If the **Pic.DrawSpecial** call fails, **Error.Last** will return a \nnon-zero value indicating the reason for the failure. \n**Error.LastMsg** will return a string which contains the textual \nversion of the error.\n"
    },
    {
      "title": "Example",
      "code": [
        "        var redID, blueID: int\r\n        var x, y : int\r\n        Draw.FillStar (50, 50, 150, 150, brightred)\r\n        redID := Pic.New (50, 50, 150, 150)\r\n        cls\r\n        Draw.FillOval (100, 100, 50, 50, brightblue)\r\n        blueID := Pic.New (50, 50, 150, 150)\r\n\tPic.DrawSpecial (redID, 50, 50, picCopy, picWipeLeftToRight, 500)\r\n\tPic.DrawSpecial (blueID, 50, 50, picCopy, picWipeTopToBottom, 500)\r\n\tPic.DrawSpecial (redID, 50, 50, picCopy, picSlideLeftToRight, 500)\r\n\tPic.DrawSpecial (blueID, 50, 50, picCopy, picSlideTopToBottom, 500)\r\n\tPic.DrawSpecial (redID, 50, 50, picCopy, picFadeIn, 1000)\r\n\tPic.DrawSpecial (blueID, 50, 50, picCopy, picBlend + 50, 0)\r\n        Pic.Free (redID)\r\n        Pic.Free (blueID)"
      ],
      "raw_content": "The program draws a blue star on the screen, then a red circle, then\r\n          proceeds to have to have the two replace each other with a variety of\r\n          transitions.<p>\r\n</p>\n<p>\r\n    </p>",
      "mdown_content": "The program draws a blue star on the screen, then a red circle, then\nproceeds to have to have the two replace each other with a variety of\ntransitions.\n\n\n"
    },
    {
      "title": "Execute",
      "executables": [
        {
          "buttontext": "Launch Example Program",
          "name": "Pic.DrawSpecial1 Example",
          "file": "Pic.DrawSpecial1.t"
        }
      ]
    },
    {
      "title": "Execute",
      "raw_content": "The following program demonstrates each of the different special \r\n          effects, first using pictures containing text, then pictures\r\n          loaded from photographs, then both at once.<p>\r\n          <object id=\"launch\" type=\"application/x-oleobject\" classid=\"clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11\" width=\"120\" height=\"40\">\r\n\t    <param name=\"Command\" value=\"TCard\">\n<param name=\"Button\" value=\"Text: Launch Example Program\">\n<param name=\"Item1\" value=\"-1,Pic.DrawSpecial2.t;Pic.DrawSpecial2 Example\"></object></p>\n<p></p>",
      "mdown_content": "The following program demonstrates each of the different special \neffects, first using pictures containing text, then pictures\nloaded from photographs, then both at once.\n\n"
    },
    {
      "title": "Status",
      "raw_content": "Exported qualified.<p>\r\n\t  This means that you can only call the function by calling \r\n\t  <b>Pic.DrawSpecial</b>, not by calling <b>DrawSpecial</b>.</p>\n<p>\r\n    </p>",
      "mdown_content": "Exported qualified.\nThis means that you can only call the function by calling \n**Pic.DrawSpecial**, not by calling **DrawSpecial**.\n\n"
    },
    {
      "title": "See also",
      "links": [
        "pic_draw",
        "pic_drawspecialback"
      ],
      "raw_content": "<b><a href=\"pic_draw.html\">Pic.Draw</a></b> for information on the meaning\r\n          of the <i>mode</i> argument.<p>\r\n          <b><a href=\"pic_drawspecialback.html\">Pic.DrawSpecialBack</a></b> for \r\n          information on how to continue executing the program while a special\r\n          effect is occurring.  This allows one to produce several special\r\n          effects at once.</p>\n<p>\r\n    </p>",
      "mdown_content": "**[pic_draw.html](Pic.Draw)** for information on the meaning\nof the *mode* argument.\n**[pic_drawspecialback.html](Pic.DrawSpecialBack)** for \ninformation on how to continue executing the program while a special\neffect is occurring.  This allows one to produce several special\neffects at once.\n\n"
    }
  ]
}
