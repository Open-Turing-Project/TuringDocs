{
  "title": "record",
  "fileName": "record",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "A <i>recordType</i> is:<p>\r\n</p>\n<table>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"8\"><font size=\"+1\"><b>record</b></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"7\"><font size=\"+1\"><i>id</i> {, <i>id</i> } : <i>typeSpec</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"7\"><font size=\"+1\">{ <i>id</i> {, <i>id</i> } : <i>typeSpec</i> }</font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"8\"><font size=\"+1\"><b>end</b> <b>record</b></font></td>\n</tr>\n</table>\n<p></p>",
      "mdown_content": "A *recordType* is:\n\n \n**record**\n \n \n*id* {, *id* } : *typeSpec*\n \n \n{ *id* {, *id* } : *typeSpec* }\n \n**end** **record**"
    },
    {
      "title": "Description",
      "raw_content": "Each value of a record type consists of fields, one field for each name (<i>id</i>) declared inside the record. In the following example, the fields are <i>name</i>,<i> phoneNumber</i> and <i>address</i>.<p>\r\n</p>",
      "mdown_content": "Each value of a record type consists of fields, one field for each name (*id*) declared inside the record. In the following example, the fields are *name*,* phoneNumber* and *address*."
    },
    {
      "title": "Example",
      "code": [
        "        type phoneRecord :\r\n            record\r\n                name : string ( 20 )\r\n                phoneNumber : int\r\n                address : string ( 50 )\r\n            end record\r\n        \r\n        var oneEntry : phoneRecord\r\n        var phoneBook : array 1 .. 100 of phoneRecord\r\n        var i : int\r\n        oneEntry .name := \"Turing, Alan\"\r\n        \r\n        phoneBook ( i ) := oneEntry % Assign whole record"
      ],
      "raw_content": "<p>\r\n</p>",
      "mdown_content": ""
    },
    {
      "title": "Details",
      "raw_content": "In a record, <i>id'</i>s of fields must be distinct. However, these need not be distinct from identifiers outside the record. Records can be assigned as a whole (to records of an equivalent type), but they cannot be compared. A semicolon can optionally follow each <i>typeSpec</i>.<p>\r\nAny array contained in a record must have bounds that are known at compile time.</p>\n<p>\r\nThe notation &gt; can be used to access record fields. For example, if <i>p</i> is a pointer to <i>phoneRecord</i>, <i>p</i>&gt;<i>name</i> locates the <i>name</i> field. See <b>pointer</b>.</p>\n<p>\r\n</p>",
      "mdown_content": "In a record, *id'*s of fields must be distinct. However, these need not be distinct from identifiers outside the record. Records can be assigned as a whole (to records of an equivalent type), but they cannot be compared. A semicolon can optionally follow each *typeSpec*.\nAny array contained in a record must have bounds that are known at compile time.\n\nThe notation > can be used to access record fields. For example, if *p* is a pointer to *phoneRecord*, *p*>*name* locates the *name* field. See **pointer**.\n"
    }
  ]
}
