{
  "title": "Font.StartSize",
  "fileName": "font_startsize",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>Font.StartSize</b> (<i>fontName</i>, <i>fontStyle</i> : <b>string</b>)<p>\r\n</p></font>",
      "text_content": " Font.StartSize (fontName, fontStyle : string)\r\n",
      "mdown_content": "**Font.StartSize** (*fontName*, *fontStyle* : **string**)"
    },
    {
      "title": "Description",
      "raw_content": "<b>Font.StartSize</b> is used to start a listing of all the sizes for a particular font name and style. <p>\r\nThe <i>fontName</i> parameter should be an actual font name (as opposed to the default names of &#147;serif&#148;, etc). You can get a list of the font names by using the <b>Font.StartName</b> and <b>Font.GetName</b> subprograms. The <i>fontStyle</i> parameter should be in the same format as would appear in the <b>Font.New</b> procedure.</p>\n<p>\r\n</p>",
      "text_content": " Font.StartSize is used to start a listing of all the sizes for a particular font name and style. \r\nThe fontName parameter should be an actual font name (as opposed to the default names of serif, etc). You can get a list of the font names by using the Font.StartName and Font.GetName subprograms. The fontStyle parameter should be in the same format as would appear in the Font.New procedure.\r\n",
      "mdown_content": "**Font.StartSize** is used to start a listing of all the sizes for a particular font name and style. \nThe *fontName* parameter should be an actual font name (as opposed to the default names of serif, etc). You can get a list of the font names by using the **Font.StartName** and **Font.GetName** subprograms. The *fontStyle* parameter should be in the same format as would appear in the **Font.New** procedure."
    },
    {
      "title": "Example",
      "code": [
        "        var fontName : string\r\n        var bold, italic, underline : boolean\r\n        var size : int\r\n        var styles : array boolean, boolean, boolean of string := \r\n            init (\"\", \"underline\", \"italic\", \"italic, underline\", \"bold\",           \r\n                         \"bold,underline\", \"bold,italic\", \"bold,italic,underline\")\r\n        Font.StartName\r\n        loop\r\n            fontName := Font.GetName\r\n            exit when fontName = \"\"\r\n            Font.GetStyle (fontName, bold, italic, underline)\r\n            for b : false .. bold\r\n                for i : false .. italic\r\n                    for u : false .. underline\r\n                        put fontName : 30, styles (b, i, u) : 22 ..\r\n                        Font.StartSize (fontName, styles (b, i, u) )\r\n                        loop\r\n                            size := Font.GetSize\r\n                            exit when size = 0\r\n                            if size = -1 then put \"scalable  \" ..\r\n                            else put size, \" \" ..\r\n                            end if\r\n                        end loop \r\n                        put \"\"\r\n                    end for\r\n                end for\r\n            end for\r\n        end loop"
      ],
      "raw_content": "The program lists all the fonts, styles and sizes available on the system.<p>\r\n</p>",
      "text_content": " The program lists all the fonts, styles and sizes available on the system.\r\n\r\n    ",
      "mdown_content": "The program lists all the fonts, styles and sizes available on the system."
    },
    {
      "title": "Execute",
      "executables": [
        {
          "buttontext": "Launch Example Program",
          "name": "Font Listing Example",
          "file": "FontList.t"
        }
      ]
    },
    {
      "title": "Status",
      "raw_content": "Exported qualified.<p>\r\nThis means that you can only call the function by calling <b>Font.StartSize</b>, not by calling <b>StartSize</b>.</p>\n<p>\r\n</p>",
      "text_content": " Exported qualified.\r\nThis means that you can only call the function by calling Font.StartSize, not by calling StartSize.\r\n",
      "mdown_content": "Exported qualified.\nThis means that you can only call the function by calling **Font.StartSize**, not by calling **StartSize**."
    }
  ],
  "dependencies": [

  ]
}
