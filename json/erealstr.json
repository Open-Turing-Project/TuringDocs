{
  "title": "erealstr",
  "fileName": "erealstr",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>erealstr</b> (<i>r </i>: <b>real</b>, <br></font><table><tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"8\"><font size=\"+1\"><i>width</i>, <i>fractionWidth</i>, <i>exponentWidth</i> : <b>int</b>) :<b>string</b></font></td>\n</tr></table>\n<p></p>",
      "text_content": " erealstr (r : real,  width, fractionWidth, exponentWidth : int) :string",
      "mdown_content": "**erealstr** (*r *: **real**,  *width*, *fractionWidth*, *exponentWidth* : **int**) :**string**"
    },
    {
      "title": "Description",
      "code": [
        "        {blank}[-]digit.{digit}e sign digit {digit}"
      ],
      "raw_content": "The <b>erealstr</b> function is used to convert a <b>real</b> number to a string; for example, <b>erealstr</b> (2.5e1, 10, 3, 2)=\"<i>b2</i>.<i>500e+01</i>\" where <i>b</i> represents a blank. The string (including exponent) is an approximation to <i>r</i>, padded on the left with blanks as necessary to a length of <i>width</i>.<p>\r\nThe <i>width</i> must be a non-negative <b>int</b> value. If the <i>width</i> parameter is not large enough to represent the value of <i>r</i>, it is implicitly increased as needed.</p>\n<p>\r\nThe <i>fractionWidth</i> parameter is the non-negative number of fractional digits to be displayed. The displayed value is rounded to the nearest decimal equivalent with this accuracy. In the case of a tie, the value is rounded to the larger of the two values.</p>\n<p>\r\nThe <i>exponentWidth</i> parameter must be non-negative and give the number of exponent digits to be displayed. If <i>exponentWidth</i> is not large enough to represent the exponent, more space is used as needed. The string returned by <i>erealstr</i> is of the form:</p>\n<p>\r\n</p>\r\nwhere <i>sign</i> is a plus or minus sign. The leftmost digit is non-zero, unless all the digits are zeros.<p>\r\nThe <b>erealstr</b> function approximates the inverse of <b>strreal</b>, although round-off errors keep these from being exact inverses.</p>\n<p>\r\n</p>",
      "text_content": " The erealstr function is used to convert a real number to a string; for example, erealstr (2.5e1, 10, 3, 2)=\"b2.500e+01\" where b represents a blank. The string (including exponent) is an approximation to r, padded on the left with blanks as necessary to a length of width.\r\nThe width must be a non-negative int value. If the width parameter is not large enough to represent the value of r, it is implicitly increased as needed.\r\nThe fractionWidth parameter is the non-negative number of fractional digits to be displayed. The displayed value is rounded to the nearest decimal equivalent with this accuracy. In the case of a tie, the value is rounded to the larger of the two values.\r\nThe exponentWidth parameter must be non-negative and give the number of exponent digits to be displayed. If exponentWidth is not large enough to represent the exponent, more space is used as needed. The string returned by erealstr is of the form:\r\n\r\nwhere sign is a plus or minus sign. The leftmost digit is non-zero, unless all the digits are zeros.\r\nThe erealstr function approximates the inverse of strreal, although round-off errors keep these from being exact inverses.\r\n",
      "mdown_content": "The **erealstr** function is used to convert a **real** number to a string; for example, **erealstr** (2.5e1, 10, 3, 2)=\"*b2*.*500e+01*\" where *b* represents a blank. The string (including exponent) is an approximation to *r*, padded on the left with blanks as necessary to a length of *width*.\nThe *width* must be a non-negative **int** value. If the *width* parameter is not large enough to represent the value of *r*, it is implicitly increased as needed.\nThe *fractionWidth* parameter is the non-negative number of fractional digits to be displayed. The displayed value is rounded to the nearest decimal equivalent with this accuracy. In the case of a tie, the value is rounded to the larger of the two values.\nThe *exponentWidth* parameter must be non-negative and give the number of exponent digits to be displayed. If *exponentWidth* is not large enough to represent the exponent, more space is used as needed. The string returned by *erealstr* is of the form:\nwhere *sign* is a plus or minus sign. The leftmost digit is non-zero, unless all the digits are zeros.\nThe **erealstr** function approximates the inverse of **strreal**, although round-off errors keep these from being exact inverses."
    },
    {
      "title": "See also",
      "links": [
        "frealstr",
        "realstr",
        "strreal",
        "intstr",
        "strint"
      ],
      "raw_content": "<b><a href=\"frealstr.html\">frealstr</a></b>, <b><a href=\"realstr.html\">realstr</a></b>, <b><a href=\"strreal.html\">strreal</a></b>, <b><a href=\"intstr.html\">intstr</a></b> and <b><a href=\"strint.html\">strint</a></b> functions.<p>\r\n</p>",
      "text_content": " frealstr, realstr, strreal, intstr and strint functions.\r\n",
      "mdown_content": "**[frealstr.html](frealstr)**, **[realstr.html](realstr)**, **[strreal.html](strreal)**, **[intstr.html](intstr)** and **[strint.html](strint)** functions."
    }
  ]
}
