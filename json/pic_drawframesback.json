{
  "title": "Pic.DrawFramesBack",
  "fileName": "pic_drawframesback",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>Pic.DrawFramesBack</b> (<i>picIds</i> : <b>array</b> 1 .. * <b>of int</b>, <i>x</i>, <i>y</i>, <i>mode</i> : <b>int</b>,</font><br><table><tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\">&nbsp;</td>  <td colspan=\"7\"><font size=\"+1\"><i>numFrames</i>, <i>delayBetweenFrames</i> : <b>int</b>, <i>eraseAfter</i> : <b>boolean</b>)</font></td>\n</tr></table>\n<p>\r\n    </p>",
      "text_content": "Pic.DrawFramesBack (picIds : array 1 .. * of int, x, y, mode : int,    numFrames, delayBetweenFrames : int, eraseAfter : boolean)\r\n    ",
      "mdown_content": "**Pic.DrawFramesBack** (*picIds* : **array** 1 .. * **of int**, *x*, *y*, *mode* : **int**,    *numFrames*, *delayBetweenFrames* : **int**, *eraseAfter* : **boolean**)"
    },
    {
      "title": "Description",
      "links": [
        "pic_drawframes"
      ],
      "raw_content": "<b>Pic.DrawFramesBack</b> is very similar to \r\n          <b><a href=\"pic_drawframes.html\">Pic.DrawFrames</a></b>.  The only\r\n          difference is that <b>Pic.DrawFramesBack</b> returns immediately\r\n          after being called and program execution continues while the frames\r\n          are being drawn.  This allows you to continue to draw other graphics\r\n          while the frames are being drawn.<p>\r\n          For example, this procedure is necessary if you want to have two \r\n          sets of frames being drawn simultaneously.</p>\n<p>\r\n    </p>",
      "text_content": "Pic.DrawFramesBack is very similar to \r\n          Pic.DrawFrames.  The only\r\n          difference is that Pic.DrawFramesBack returns immediately\r\n          after being called and program execution continues while the frames\r\n          are being drawn.  This allows you to continue to draw other graphics\r\n          while the frames are being drawn.\r\n          For example, this procedure is necessary if you want to have two \r\n          sets of frames being drawn simultaneously.\r\n    ",
      "mdown_content": "**Pic.DrawFramesBack** is very similar to **[pic_drawframes.html](Pic.DrawFrames)**.  The onlydifference is that **Pic.DrawFramesBack** returns immediatelyafter being called and program execution continues while the framesare being drawn.  This allows you to continue to draw other graphicswhile the frames are being drawn.\nFor example, this procedure is necessary if you want to have two sets of frames being drawn simultaneously."
    },
    {
      "title": "Details",
      "raw_content": "If you are wish to have several sets of images displayed at the \r\n          same time, you must use <b>Pic.DrawFramesBack</b> to display each set\r\n          of images but the last and then use <b>Pic.DrawFrames</b> to display\r\n          the last set so that Turing will wait until they are completed before \r\n          continuing execution.<p>\r\n          If you want to draw the same set of frames continuously, do not use\r\n          <b>Pic.DrawFramesBack</b>.</p>\n<p>  \r\n          <tt><b>for</b> <i>i</i> : 1 .. 20<br>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;<b>Pic.DrawFrames</b> (<i>pics</i>, 10, 10, <i>picCopy</i>, 10, 50, <b>false</b>)<br>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;% Do not use Pic.DrawFramesBack in the previous statement<br><b>end for</b></tt></p>\n<p>\r\n          If you do, Turing will attempt to run each of the calls at the same\r\n          time, and the animation will appear to only run once.</p>\n<p>\r\n    </p>",
      "text_content": "If you are wish to have several sets of images displayed at the \r\n          same time, you must use Pic.DrawFramesBack to display each set\r\n          of images but the last and then use Pic.DrawFrames to display\r\n          the last set so that Turing will wait until they are completed before \r\n          continuing execution.\r\n          If you want to draw the same set of frames continuously, do not use\r\n          Pic.DrawFramesBack.  \r\n          for i : 1 .. 20\r\n                  Pic.DrawFrames (pics, 10, 10, picCopy, 10, 50, false)\r\n                  % Do not use Pic.DrawFramesBack in the previous statementend for\r\n          If you do, Turing will attempt to run each of the calls at the same\r\n          time, and the animation will appear to only run once.\r\n    ",
      "mdown_content": "If you are wish to have several sets of images displayed at the same time, you must use **Pic.DrawFramesBack** to display each setof images but the last and then use **Pic.DrawFrames** to displaythe last set so that Turing will wait until they are completed before continuing execution.\nIf you want to draw the same set of frames continuously, do not use**Pic.DrawFramesBack**.\n**for** *i* : 1 .. 20    **Pic.DrawFrames** (*pics*, 10, 10, *picCopy*, 10, 50, **false**)    % Do not use Pic.DrawFramesBack in the previous statement**end for**\nIf you do, Turing will attempt to run each of the calls at the sametime, and the animation will appear to only run once."
    },
    {
      "title": "Details",
      "links": [
        "pic_filenewframes",
        "pic_frames",
        "pic_drawframes",
        "",
        "pic_drawframes",
        "",
        "pic_frames"
      ],
      "raw_content": "GIF files can contain multiple frames (pictures).  Animated GIFs \r\n          function by each frame in the GIF one after another with a delay\r\n          between them.\r\n          <p>\r\n          Turing allows users to load multiple frame GIF images into a series\r\n          of pictures into an array using the \r\n          <b><a href=\"pic_filenewframes.html\">Pic.FileNewFrames</a></b> \r\n          procedure.  The user can determine how many frames are found in \r\n          the GIF file using <b><a href=\"pic_frames.html\">Pic.Frames</a></b>.  \r\n          The frames can be sequentially displayed using either \r\n          <b><a href=\"pic_drawframes.html\">Pic.DrawFrames</a></b> or \r\n          <b><a href=\"\">Pic.DrawFramesBack</a></b> \r\n          which display the images one at a time.\r\n          (<b><a href=\"pic_drawframes.html\">Pic.DrawFrames</a></b> returns \r\n          once all the images have been displayed, \r\n          <b><a href=\"\">Pic.DrawFramesBack</a></b> \r\n          returns immediately allowing the program to continue execution while \r\n          the frames are being displayed.\r\n          </p>\n<p>\r\n          <b><a href=\"pic_frames.html\">Pic.Frames</a></b> is a function which \r\n          returns the number of frames found in the GIF.  If it is used on a \r\n          GIF that does not contain multiple images, or on a non-GIF image file, \r\n          it returns 1.</p>\n<p>\r\n    </p>",
      "text_content": "GIF files can contain multiple frames (pictures).  Animated GIFs \r\n          function by each frame in the GIF one after another with a delay\r\n          between them.\r\n          \r\n          Turing allows users to load multiple frame GIF images into a series\r\n          of pictures into an array using the \r\n          Pic.FileNewFrames \r\n          procedure.  The user can determine how many frames are found in \r\n          the GIF file using Pic.Frames.  \r\n          The frames can be sequentially displayed using either \r\n          Pic.DrawFrames or \r\n          Pic.DrawFramesBack \r\n          which display the images one at a time.\r\n          (Pic.DrawFrames returns \r\n          once all the images have been displayed, \r\n          Pic.DrawFramesBack \r\n          returns immediately allowing the program to continue execution while \r\n          the frames are being displayed.\r\n          \r\n          Pic.Frames is a function which \r\n          returns the number of frames found in the GIF.  If it is used on a \r\n          GIF that does not contain multiple images, or on a non-GIF image file, \r\n          it returns 1.\r\n    ",
      "mdown_content": "GIF files can contain multiple frames (pictures).  Animated GIFs function by each frame in the GIF one after another with a delaybetween them.\nTuring allows users to load multiple frame GIF images into a seriesof pictures into an array using the **[pic_filenewframes.html](Pic.FileNewFrames)** procedure.  The user can determine how many frames are found in the GIF file using **[pic_frames.html](Pic.Frames)**.  The frames can be sequentially displayed using either **[pic_drawframes.html](Pic.DrawFrames)** or **[](Pic.DrawFramesBack)** which display the images one at a time.(**[pic_drawframes.html](Pic.DrawFrames)** returns once all the images have been displayed, **[](Pic.DrawFramesBack)** returns immediately allowing the program to continue execution while the frames are being displayed.\n**[pic_frames.html](Pic.Frames)** is a function which returns the number of frames found in the GIF.  If it is used on a GIF that does not contain multiple images, or on a non-GIF image file, it returns 1."
    },
    {
      "title": "Example",
      "code": [
        "        % Determine the number of frames in \"globe.gif\"\r\n        var numFrames := Pic.Frames (\"globe.gif\")\r\n        % Load the picture\r\n        var delayTime : int\r\n        var pics : array 1 .. numFrames of int\r\n\r\n\tPic.FileNewFrames (\"globe.gif\", pics, delayTime)\r\n\tfor i : 1 .. 50\r\n\t    Pic.DrawFramesBack (pics, 10, 10, picMerge, numFrames, 50, false)\r\n\t    Pic.DrawFramesBack (pics, 20 + Pic.Width (pics(1)), 10, picMerge, numFrames, 50, false)\r\n\t    % All 50 iterations will execute at once if the next call is \r\n\t    % Pic.DrawFramesBack, and not Pic.DrawFrames\r\n\t    Pic.DrawFrames (pics, 30 + 2 * Pic.Width (pics(1)), 10, picMerge, numFrames, 50, false)\r\n\tend for\r\n\tfor i : 1 .. numFramesPic.Free (pics (i))\r\n\tend for\r\n    "
      ],
      "raw_content": "The program loads a multiple frame GIF called \"globe.gif\" and \r\n          displays it.",
      "text_content": "The program loads a multiple frame GIF called \"globe.gif\" and \r\n          displays it.\r\n",
      "mdown_content": "The program loads a multiple frame GIF called \"globe.gif\" and displays it."
    },
    {
      "title": "Execute",
      "executables": [
        {
          "buttontext": "Launch Example Program",
          "name": "Pic.DrawFramesBack Example",
          "file": "Pic.DrawFramesBack.t"
        }
      ]
    },
    {
      "title": "Status",
      "raw_content": "Exported qualified.<p>\r\n\t  This means that you can only call the function by calling \r\n\t  <b>Pic.DrawFrames</b>, not by calling <b>DrawFrames</b>.</p>\n<p>\r\n    </p>",
      "text_content": "Exported qualified.\r\n\t  This means that you can only call the function by calling \r\n\t  Pic.DrawFrames, not by calling DrawFrames.\r\n    ",
      "mdown_content": "Exported qualified.\nThis means that you can only call the function by calling **Pic.DrawFrames**, not by calling **DrawFrames**."
    },
    {
      "title": "See also",
      "links": [
        "pic_frames",
        "pic_filenewframes",
        ""
      ],
      "raw_content": "<b><a href=\"pic_frames.html\">Pic.Frames</a></b> for information on how\r\n          to determine the number of frames in a GIF image.<p>\r\n          <b><a href=\"pic_filenewframes.html\">Pic.FileNewFrames</a></b> for information\r\n          on how to load a GIF image with multiple frames into an array of \r\n          <b>int</b>s.</p>\n<p>\r\n          <b><a href=\"\">Pic.DrawFramesBack</a></b> for \r\n          information on how to sequentially display the images stored in array \r\n          of pictures while continuing to execute the program.</p>\n<p>\r\n    </p>",
      "text_content": "Pic.Frames for information on how\r\n          to determine the number of frames in a GIF image.\r\n          Pic.FileNewFrames for information\r\n          on how to load a GIF image with multiple frames into an array of \r\n          ints.\r\n          Pic.DrawFramesBack for \r\n          information on how to sequentially display the images stored in array \r\n          of pictures while continuing to execute the program.\r\n    ",
      "mdown_content": "**[pic_frames.html](Pic.Frames)** for information on howto determine the number of frames in a GIF image.\n**[pic_filenewframes.html](Pic.FileNewFrames)** for informationon how to load a GIF image with multiple frames into an array of **int**s.\n**[](Pic.DrawFramesBack)** for information on how to sequentially display the images stored in array of pictures while continuing to execute the program."
    }
  ],
  "dependencies": [

  ]
}
