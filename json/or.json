{
  "title": "or",
  "fileName": "or",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><i>A </i><b>or</b><i> B</i><p>\r\n</p></font>",
      "mdown_content": "*A ***or*** B*"
    },
    {
      "title": "Description",
      "raw_content": "The <b>or</b> (boolean) operator yields a result of true if at least one (or both) of the operands is true. <b>or</b> is a short circuit operator. For example, if <i>A</i> is true in <i>A </i><b>or</b><i> B</i> then <i>B </i>is not evaluated.<p>\r\n</p>",
      "mdown_content": "The **or** (boolean) operator yields a result of true if at least one (or both) of the operands is true. **or** is a short circuit operator. For example, if *A* is true in *A ***or*** B* then *B *is not evaluated."
    },
    {
      "title": "Example",
      "code": [
        "        var success : boolean := false\r\n        var continuing := true  % the type is boolean\r\n        Â…\r\n        continuing := continuing or success"
      ],
      "raw_content": "<p>\r\n</p>",
      "mdown_content": ""
    },
    {
      "title": "Details",
      "raw_content": "<i>continuing</i> is set to <b>false</b>, if and only if, both <i>continuing</i> and <i>success</i> are <b>false</b>. Since Turing uses short circuit operators, once <i>continuing</i> is true, <i>success</i> will not be looked at.<p>\r\nThe <b>or</b> operator can be applied to natural numbers. The result is the natural number that is the bit-wise <b>or</b> of the operands. See <b>nat</b> (natural number).</p>\n<p>\r\n</p>",
      "mdown_content": "*continuing* is set to **false**, if and only if, both *continuing* and *success* are **false**. Since Turing uses short circuit operators, once *continuing* is true, *success* will not be looked at.\nThe **or** operator can be applied to natural numbers. The result is the natural number that is the bit-wise **or** of the operands. See **nat** (natural number).\n"
    },
    {
      "title": "See also",
      "links": [
        "boolean",
        "true",
        "explicittruefalseconstant",
        "true",
        "false",
        "precedence",
        "expn"
      ],
      "raw_content": "<b><a href=\"boolean.html\">boolean</a></b> (which discusses <b><a href=\"true.html\">true</a></b>/<b>false</b> values), <i><a href=\"explicittruefalseconstant.html\">explicitTrueFalseConstant</a></i> (which discusses the values <b><a href=\"true.html\">true</a></b> and <b><a href=\"false.html\">false</a></b>), <i><a href=\"precedence.html\">precedence</a></i> and <i><a href=\"expn.html\">expn</a></i> (expression).<p>\r\n</p>",
      "mdown_content": "**[boolean.html](boolean)** (which discusses **[true.html](true)**/**false** values), *[explicittruefalseconstant.html](explicitTrueFalseConstant)* (which discusses the values **[true.html](true)** and **[false.html](false)**), *[precedence.html](precedence)* and *[expn.html](expn)* (expression)."
    }
  ]
}
