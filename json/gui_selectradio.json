{
  "title": "GUI.SelectRadio",
  "fileName": "gui_selectradio",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>GUI.SelectRadio</b> (<i>widgetID</i> : <b>int</b>)<p>\r\n</p></font>",
      "text_content": " GUI.SelectRadio (widgetID : int)\r\n",
      "mdown_content": "**GUI.SelectRadio** (_widgetID_ : **int**)"
    },
    {
      "title": "Description",
      "raw_content": "Selects a radio button specified by <i>widgetID</i>. The previously-selected radio button is \"de-selected\". The <i>action procedure</i> of the radio button is called.<p>\r\n</p>",
      "text_content": " Selects a radio button specified by widgetID. The previously-selected radio button is \"de-selected\". The action procedure of the radio button is called.\r\n",
      "mdown_content": "Selects a radio button specified by _widgetID_. The previously-selected radio button is \"de-selected\". The _action procedure_ of the radio button is called."
    },
    {
      "title": "Example",
      "code": [
        "        import GUI in \"%oot/lib/GUI\" \r\n        View.Set (\"graphics:350;110\") \r\n        \r\n        var radio : array 1 .. 6 of int     % The radio button IDs.\r\n        \r\n        procedure RadioPressed\r\n            Text.Locate (1, 1)\r\n            for i : 1 .. 6\r\n                if radio (i) = GUI.GetEventWidgetID then\r\n                    put \"Radio Button \" , i, \" Selected\"\r\n                end if\r\n            end for\r\n        end RadioPressed\r\n        \r\n        procedure Select\r\n            GUI.SelectRadio (radio (3))\r\n            GUI.SelectRadio (radio (6))\r\n        end Select\r\n        \r\n        radio (1) := GUI.CreateRadioButton (15, maxy  35, \r\n            \"Radio Button 1\", 0, RadioPressed)\r\n        radio (2) := GUI.CreateRadioButton ( 1, 1, \"Radio Button 2\", \r\n            radio (1), RadioPressed)\r\n        radio (3) := GUI.CreateRadioButton ( 1, 1, \"Radio Button 3\",\r\n            radio (2), RadioPressed)\r\n        radio (4) := GUI.CreateRadioButtonFull (maxx  15, maxy  35,\r\n            \"Radio Button 4\", 0, RadioPressed, GUI.RIGHT, GUI.NONE)\r\n        radio (5) := GUI.CreateRadioButtonFull ( 1, 1, \"Radio Button 5\", \r\n            radio (4), RadioPressed, GUI.RIGHT, GUI.NONE)\r\n        radio (6) := GUI.CreateRadioButtonFull ( 1, 1, \"Radio Button 6\",\r\n            radio (5), RadioPressed, GUI.RIGHT, GUI.NONE)\r\n        \r\n        var selectButton : int := GUI.CreateButton (15, 10, 100, \r\n            \"Select Bottom Buttons\", Select)\r\n        var quitButton : int := GUI.CreateButton (maxx  15  100, 10, 100,  \r\n            \"Quit\", GUI.Quit)loop\r\n            exit when GUI.ProcessEvent\r\n        end loop"
      ],
      "raw_content": "The following program creates siz radio buttons. Selecting one of the buttons cause the bottom two radio buttons to become selected.<p>\r\n</p>",
      "text_content": " The following program creates siz radio buttons. Selecting one of the buttons cause the bottom two radio buttons to become selected.\r\n\r\n",
      "mdown_content": "The following program creates siz radio buttons. Selecting one of the buttons cause the bottom two radio buttons to become selected."
    },
    {
      "title": "Status",
      "raw_content": "Exported qualified.<p>\r\nThis means that you can only call the procedures by calling <b>GUI.SelectRadio</b>, not by calling <b>SelectRadio</b>.</p>\n<p>\r\n</p>",
      "text_content": " Exported qualified.\r\nThis means that you can only call the procedures by calling GUI.SelectRadio, not by calling SelectRadio.\r\n",
      "mdown_content": "Exported qualified.\nThis means that you can only call the procedures by calling **GUI.SelectRadio**, not by calling **SelectRadio**."
    },
    {
      "title": "See also",
      "raw_content": "<b>GUI.CreateRadioButton</b> and <b>GUI.CreatePictureRadioButton</b>.<p>\r\n</p>",
      "text_content": " GUI.CreateRadioButton and GUI.CreatePictureRadioButton.\r\n",
      "mdown_content": "**GUI.CreateRadioButton** and **GUI.CreatePictureRadioButton**."
    }
  ],
  "dependencies": [

  ]
}
