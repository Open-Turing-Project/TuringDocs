{
  "title": "GUI.CreateTextBox[Full]",
  "fileName": "gui_createtextbox",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>GUI.CreateTextBox</b> (<i>x</i>, <i>y</i>, <i>width</i>, <i>height</i> : <b>int</b>) : <b>int</b><p>\r\n          <b>GUI.CreateTextBoxFull</b> (<i>x</i>, <i>y</i>, <i>width</i>, <i>height</i> : <b>int</b>,<br>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;<i>border</i>, <i>fontID</i> : <b>int</b>) : <b>int</b></p>\n<p></p></font>",
      "text_content": "GUI.CreateTextBox (x, y, width, height : int) : int\r\n          GUI.CreateTextBoxFull (x, y, width, height : int,\r\n              border, fontID : int) : int\r\n    ",
      "mdown_content": "**GUI.CreateTextBox** (_x_, _y_, _width_, _height_ : **int**) : **int****GUI.CreateTextBoxFull** (_x_, _y_, _width_, _height_ : **int**,    _border_, _fontID_ : **int**) : **int**"
    },
    {
      "title": "Description",
      "images": [
        "gui_createtextbox_full01.gif"
      ],
      "raw_content": "Creates a text box and returns the text box's widget ID. <p>\r\n\t  A text box is a box used for displaying text. It has scroll bars that activate when text appears outside the border of the text box. The user cannot directly select, edit or modify the text in the text box.</p>\n<p>\r\n\t  The <i>x</i> and<i> y</i> parameters specify the lower-left corner of the area in which the text will be drawn. The <i>width</i> and <i>height</i> parameters specify the width and height of the text drawing area The text box border is just outside the text drawing area. Because of this, <b>GUI.GetX</b> and <b>GUI.GetY</b> will return a value slightly smaller than <i>x</i> and <i>y</i> and <b>GUI.GetWidth</b><i> </i>and <b>GUI.GetHeight</b> will return values slightly larger than <i>width</i> and <i>height</i>.</p>\n<p>\r\n\t  For <b>GUI.CreateTextBox</b>, the border around the text box is always a line. For <b>GUI.CreateTextBoxFull</b>, the type of border is specified by the <i>border</i> parameter. The <i>border</i> parameter is one of 0, <i>GUI.LINE</i>, <i>GUI.INDENT</i>, or <i>GUI.EXDENT</i>. A border of 0 is the default and is the same as <i>GUI.LINE</i>. <i>GUI.INDENT</i> and <i>GUI.EXDENT</i> only display properly if the background colour has been set to <i>gray</i> using <b>GUI.SetBackgroundColor</b>. <i>GUI.INDENT</i> makes the text box appear indented or recessed. <i>GUI.EXDENT</i> makes the text box appear to stand out from the window. The <i>fontID</i> parameter specifies the font ID of the font to be used in the text box. The font ID is received from a <i>Font.New</i> call. Do not call <i>Font.Free</i> for this font ID until the label has been disposed of by calling <b>GUI.Dispose</b>.</p>\n<p>\r\n\t  By using the <i>fondID</i> parameter, text boxes can have any size or typeface.</p>\n<p>\r\n\t  </p>\n<center><img src=\"gui_createtextbox_full01.gif\"></center>\r\n\t  <center><b>A text box displaying the contents of a file.</b></center>\n<p>\r\n    </p>",
      "text_content": "Creates a text box and returns the text box's widget ID. \r\n\t  A text box is a box used for displaying text. It has scroll bars that activate when text appears outside the border of the text box. The user cannot directly select, edit or modify the text in the text box.\r\n\t  The x and y parameters specify the lower-left corner of the area in which the text will be drawn. The width and height parameters specify the width and height of the text drawing area The text box border is just outside the text drawing area. Because of this, GUI.GetX and GUI.GetY will return a value slightly smaller than x and y and GUI.GetWidth and GUI.GetHeight will return values slightly larger than width and height.\r\n\t  For GUI.CreateTextBox, the border around the text box is always a line. For GUI.CreateTextBoxFull, the type of border is specified by the border parameter. The border parameter is one of 0, GUI.LINE, GUI.INDENT, or GUI.EXDENT. A border of 0 is the default and is the same as GUI.LINE. GUI.INDENT and GUI.EXDENT only display properly if the background colour has been set to gray using GUI.SetBackgroundColor. GUI.INDENT makes the text box appear indented or recessed. GUI.EXDENT makes the text box appear to stand out from the window. The fontID parameter specifies the font ID of the font to be used in the text box. The font ID is received from a Font.New call. Do not call Font.Free for this font ID until the label has been disposed of by calling GUI.Dispose.\r\n\t  By using the fondID parameter, text boxes can have any size or typeface.\r\n\t  \r\n\t  A text box displaying the contents of a file.\r\n    ",
      "mdown_content": "Creates a text box and returns the text box's widget ID. \n\nA text box is a box used for displaying text. It has scroll bars that activate when text appears outside the border of the text box. The user cannot directly select, edit or modify the text in the text box.\n\nThe _x_ and _y_ parameters specify the lower-left corner of the area in which the text will be drawn. The _width_ and _height_ parameters specify the width and height of the text drawing area The text box border is just outside the text drawing area. Because of this, **GUI.GetX** and **GUI.GetY** will return a value slightly smaller than _x_ and _y_ and **GUI.GetWidth** and **GUI.GetHeight** will return values slightly larger than _width_ and _height_.\n\nFor **GUI.CreateTextBox**, the border around the text box is always a line. For **GUI.CreateTextBoxFull**, the type of border is specified by the _border_ parameter. The _border_ parameter is one of 0, _GUI.LINE_, _GUI.INDENT_, or _GUI.EXDENT_. A border of 0 is the default and is the same as _GUI.LINE_. _GUI.INDENT_ and _GUI.EXDENT_ only display properly if the background colour has been set to _gray_ using **GUI.SetBackgroundColor**. _GUI.INDENT_ makes the text box appear indented or recessed. _GUI.EXDENT_ makes the text box appear to stand out from the window. The _fontID_ parameter specifies the font ID of the font to be used in the text box. The font ID is received from a _Font.New_ call. Do not call _Font.Free_ for this font ID until the label has been disposed of by calling **GUI.Dispose**.\n\nBy using the _fondID_ parameter, text boxes can have any size or typeface.\n\n\n\n![Doc Image](gui_createtextbox_full01.gif)\n\n**A text box displaying the contents of a file.**\n"
    },
    {
      "title": "Example",
      "code": [
        "        import GUI \r\n        View.Set (\"graphics:300;300\") \r\n        \r\n        const fileNameToBeViewed : string := \"TextBxs.DEM\"\r\n        var textBox : int       % The Text Field ID.\r\n        var title : int     % The label for the title.\r\n        var f : int         % The stream number of the file.\r\n        var line : string       % Lines to be read from the file.\r\n        \r\n        % Open the file.\r\n        open : f, fileNameToBeViewed, get\r\n        if f = 0 then\r\n            put \"Unable to open \" + fileNameToBeViewed + \" : \", Error.LastMsg\r\n            return\r\n        end if\r\n        \r\n        % Set background color to gray for indented text box.\r\n        GUI.SetBackgroundColor (gray)\r\n        \r\n        % Create the title label and text box.\r\n        title := GUI.CreateLabelFull (20, 280, fileNameToBeViewed, 250, 0, \r\n            GUI.CENTER, 0)\r\n        textBox := GUI.CreateTextBoxFull (10, 10, 280, 265, \r\n            GUI.INDENT, 0)\r\n        \r\n        % Read the file and place it in the text box.\r\n        loop\r\n            exit when eof (f)\r\n            get : f, line : *\r\n            GUI.AddLine (textBox, line)\r\n        end loop\r\n        \r\n        close : f   % Close the file.\r\n        \r\n        loop\r\n            exit when GUI.ProcessEvent\r\n        end loop"
      ],
      "raw_content": "The following program displays the contents of a file in a text box.<p>\r\n</p>\n<p>\r\n    </p>",
      "text_content": "The following program displays the contents of a file in a text box.\r\n\r\n    ",
      "mdown_content": "The following program displays the contents of a file in a text box.\n\n\n"
    },
    {
      "title": "Execute",
      "executables": [
        {
          "buttontext": "Launch Example Program",
          "name": "GUI.CreateTextBoxFull Example",
          "file": "GUI.CreateTextBoxFull.t"
        }
      ]
    },
    {
      "title": "Details",
      "raw_content": "When <b>GUI.CreateTextBox </b>or <b>GUI.CreateTextBoxFull</b><i> </i>is called, the newly created picture will be displayed immediately unless <b>GUI.DisplayWhenCreated</b> has been called with the <i>display</i> parameter set to false. <p>\r\n\t  A text box widget is a passive widget and cannot be enabled or disabled.</p>\n<p>\r\n    </p>",
      "text_content": "When GUI.CreateTextBox or GUI.CreateTextBoxFull is called, the newly created picture will be displayed immediately unless GUI.DisplayWhenCreated has been called with the display parameter set to false. \r\n\t  A text box widget is a passive widget and cannot be enabled or disabled.\r\n    ",
      "mdown_content": "When **GUI.CreateTextBox** or **GUI.CreateTextBoxFull** is called, the newly created picture will be displayed immediately unless **GUI.DisplayWhenCreated** has been called with the _display_ parameter set to false. \n\nA text box widget is a passive widget and cannot be enabled or disabled.\n"
    },
    {
      "title": "Details",
      "raw_content": "The following GUI subprograms can be called with a text box as the <i>widgetID</i> parameter:<p>\r\n\t  </p>\n<table><tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\r\n\t      <td>\n<b>GUI.Show</b>, <b>GUI.Hide</b>, <b>GUI.Dispose</b>,\r\n\t\t  <b>GUI.GetX</b>, <b>GUI.GetY</b>, <b>GUI.GetWidth</b>,\r\n\t\t  <b>GUI.GetHeight</b>, <b>GUI.SetPosition</b>,\r\n\t\t  <b>GUI.SetSize</b>, <b>GUI.SetPositionAndSize</b>,\r\n\t\t  <b>GUI.AddLine</b>, <b>GUI.AddText</b>, \r\n\t\t  <b>GUI.ClearText</b>, <b>GUI.SetTopLine</b>, \r\n\t\t  <b>GUI.SetScrollOnAdd</b> </td>\r\n\t    </tr></table>",
      "text_content": "The following GUI subprograms can be called with a text box as the widgetID parameter:\r\n\t   \r\n\t      GUI.Show, GUI.Hide, GUI.Dispose,\r\n\t\t  GUI.GetX, GUI.GetY, GUI.GetWidth,\r\n\t\t  GUI.GetHeight, GUI.SetPosition,\r\n\t\t  GUI.SetSize, GUI.SetPositionAndSize,\r\n\t\t  GUI.AddLine, GUI.AddText, \r\n\t\t  GUI.ClearText, GUI.SetTopLine, \r\n\t\t  GUI.SetScrollOnAdd \r\n\t    ",
      "mdown_content": "The following GUI subprograms can be called with a text box as the _widgetID_ parameter:\n\n\n**GUI.Show**, **GUI.Hide**, **GUI.Dispose**,**GUI.GetX**, **GUI.GetY**, **GUI.GetWidth**,**GUI.GetHeight**, **GUI.SetPosition**,**GUI.SetSize**, **GUI.SetPositionAndSize**,**GUI.AddLine**, **GUI.AddText**, **GUI.ClearText**, **GUI.SetTopLine**, **GUI.SetScrollOnAdd** "
    },
    {
      "title": "Status",
      "raw_content": "Exported qualified.<p>\r\n\t  This means that you can only call the function by calling <b>GUI.CreateTextBox</b>, not by calling <b>CreateTextBox</b>.</p>\n<p>\r\n    </p>",
      "text_content": "Exported qualified.\r\n\t  This means that you can only call the function by calling GUI.CreateTextBox, not by calling CreateTextBox.\r\n    ",
      "mdown_content": "Exported qualified.\n\nThis means that you can only call the function by calling **GUI.CreateTextBox**, not by calling **CreateTextBox**.\n"
    },
    {
      "title": "See also",
      "links": [
        "gui_addline",
        "gui_addtext",
        "gui_settopline",
        "gui_setscrollonadd",
        "gui_cleartext"
      ],
      "raw_content": "<b><a href=\"gui_addline.html\">GUI.AddLine</a></b>, \r\n          <b><a href=\"gui_addtext.html\">GUI.AddText</a></b> \r\n          for adding text to the text box.\r\n\t  See also <b><a href=\"gui_settopline.html\">GUI.SetTopLine</a></b>\r\n\t  to set the top line of text in the text box.\r\n\t  See also <b><a href=\"gui_setscrollonadd.html\">GUI.SetScrollOnAdd</a></b>\r\n\t  to set stop the text box from scrolling when text \r\n\t  is added to the text box.\r\n\t  See also <b><a href=\"gui_cleartext.html\">GUI.ClearText</a></b> \r\n\t  for clearing the text box.<p>\r\n    </p>",
      "text_content": "GUI.AddLine, \r\n          GUI.AddText \r\n          for adding text to the text box.\r\n\t  See also GUI.SetTopLine\r\n\t  to set the top line of text in the text box.\r\n\t  See also GUI.SetScrollOnAdd\r\n\t  to set stop the text box from scrolling when text \r\n\t  is added to the text box.\r\n\t  See also GUI.ClearText \r\n\t  for clearing the text box.\r\n    ",
      "mdown_content": "**[GUI.AddLine](gui_addline.html)**, **[GUI.AddText](gui_addtext.html)** for adding text to the text box.See also **[GUI.SetTopLine](gui_settopline.html)**to set the top line of text in the text box.See also **[GUI.SetScrollOnAdd](gui_setscrollonadd.html)**to set stop the text box from scrolling when text is added to the text box.See also **[GUI.ClearText](gui_cleartext.html)** for clearing the text box.\n"
    }
  ],
  "dependencies": [
    "gui_createtextbox_full01.gif"
  ]
}
