{
  "title": "PC.ParallelPut",
  "fileName": "pc_parallelput",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>PC.ParallelPut</b> (<i>port</i> : <b>int</b>, <i>value</i> : <b>int</b>)<p>\r\n</p></font>",
      "text_content": " PC.ParallelPut (port : int, value : int)\r\n",
      "mdown_content": "**PC.ParallelPut** (_port_ : **int**, _value_ : **int**)\n"
    },
    {
      "title": "Description",
      "raw_content": "The <b>PC.ParallelPut </b>procedure is used on a PC to set the values on the data pins on the parallel port. The port is specified with the <i>port</i> parameter which can have the value 1, 2 or 3 corresponding to \"LPT1\", \"LPT2\" and \"LPT3\". This procedure can be used to control robots and peripherals.<p>\r\n</p>",
      "text_content": " The PC.ParallelPut procedure is used on a PC to set the values on the data pins on the parallel port. The port is specified with the port parameter which can have the value 1, 2 or 3 corresponding to \"LPT1\", \"LPT2\" and \"LPT3\". This procedure can be used to control robots and peripherals.\r\n",
      "mdown_content": "The **PC.ParallelPut** procedure is used on a PC to set the values on the data pins on the parallel port. The port is specified with the _port_ parameter which can have the value 1, 2 or 3 corresponding to \"LPT1\", \"LPT2\" and \"LPT3\". This procedure can be used to control robots and peripherals.\n"
    },
    {
      "title": "Example",
      "code": [
        "        for i : 0 .. 7\r\n            %Set data bit i on parallel port LPT2\r\n            PC.ParallelPut (2, 2 ** i)  \r\n            put \"Data bit \", i, \"  or Pin \", i + 2, \"has just been set\"\r\n        end for"
      ],
      "raw_content": "This program sets data bit 0, data bit 1 and so on to data bit 7.<p>\r\n</p>",
      "text_content": " This program sets data bit 0, data bit 1 and so on to data bit 7.\r\n\r\n",
      "mdown_content": "This program sets data bit 0, data bit 1 and so on to data bit 7.\n"
    },
    {
      "title": "Details",
      "images": [
        "pc_parallelput01.gif"
      ],
      "raw_content": "The <b>PC.ParallelPut </b>procedure is used to set the eight data bits on the PC's parallel port. These data bits 0 - 7 correspond to pins 2 - 9 on the parallel port.<p>\r\n\r\n</p>\n<center><img src=\"pc_parallelput01.gif\"></center>\r\nThe value sent to <b>PC.ParallelPut </b>is the sum of the following:<p>\r\n</p>\n<table>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td>1</td>\n<td width=\"10\">&nbsp;</td>\n<td>Data bit 0</td>\n<td width=\"10\">&nbsp;</td>\n<td>16</td>\n<td width=\"10\">&nbsp;</td>\n<td>Data bit 4</td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td>2</td>\n<td width=\"10\">&nbsp;</td>\n<td>Data bit 1</td>\n<td width=\"10\">&nbsp;</td>\n<td>32</td>\n<td width=\"10\">&nbsp;</td>\n<td>Data bit 5</td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td>4</td>\n<td width=\"10\">&nbsp;</td>\n<td>Data bit 2</td>\n<td width=\"10\">&nbsp;</td>\n<td>64</td>\n<td width=\"10\">&nbsp;</td>\n<td>Data bit 6</td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td>8</td>\n<td width=\"10\">&nbsp;</td>\n<td>Data bit 3</td>\n<td width=\"10\">&nbsp;</td>\n<td>128</td>\n<td width=\"10\">&nbsp;</td>\n<td>Data bit 7</td>\n</tr>\n</table>\n<p>\r\nFor example, the command <b>PC.ParallelPut </b>(97) sets data bits 0, 5 and 6 high (97 = 1 + 32 + 64) and sets the other data pins low. Because there are only 8 data pins in the parallel port, the value passed to <b>PC.ParallelPut </b>must be from 0 to 255.</p>\n<p>\r\nThe <b>PC.ParallelPut </b>procedure is not meant for sending a stream of characters to the parallel port (for example, if you want to send the string \"Hello\" to the printer). If you want to do this, open the file \"LPT1\" using the <b>open</b> statement and <b>put</b> to the file. </p>\n<p>\r\n</p>",
      "text_content": " The PC.ParallelPut procedure is used to set the eight data bits on the PC's parallel port. These data bits 0 - 7 correspond to pins 2 - 9 on the parallel port.\r\n\r\n\r\nThe value sent to PC.ParallelPut is the sum of the following:\r\n 1 Data bit 0 16 Data bit 4 2 Data bit 1 32 Data bit 5 4 Data bit 2 64 Data bit 6 8 Data bit 3 128 Data bit 7\r\nFor example, the command PC.ParallelPut (97) sets data bits 0, 5 and 6 high (97 = 1 + 32 + 64) and sets the other data pins low. Because there are only 8 data pins in the parallel port, the value passed to PC.ParallelPut must be from 0 to 255.\r\nThe PC.ParallelPut procedure is not meant for sending a stream of characters to the parallel port (for example, if you want to send the string \"Hello\" to the printer). If you want to do this, open the file \"LPT1\" using the open statement and put to the file. \r\n",
      "mdown_content": "The **PC.ParallelPut** procedure is used to set the eight data bits on the PC's parallel port. These data bits 0 - 7 correspond to pins 2 - 9 on the parallel port.\n\n\n\n![Doc Image](pc_parallelput01.gif)\n\nThe value sent to **PC.ParallelPut** is the sum of the following:\n\n\n1   Data bit 0   16   Data bit 4\n2   Data bit 1   32   Data bit 5\n4   Data bit 2   64   Data bit 6\n8   Data bit 3   128   Data bit 7\n\n\nFor example, the command **PC.ParallelPut** (97) sets data bits 0, 5 and 6 high (97 = 1 + 32 + 64) and sets the other data pins low. Because there are only 8 data pins in the parallel port, the value passed to **PC.ParallelPut** must be from 0 to 255.\n\nThe **PC.ParallelPut** procedure is not meant for sending a stream of characters to the parallel port (for example, if you want to send the string \"Hello\" to the printer). If you want to do this, open the file \"LPT1\" using the **open** statement and **put** to the file. \n"
    },
    {
      "title": "Status",
      "raw_content": "Exported qualified.<p>\r\nThis means that you can only call the function by calling <b>PC.ParallelPut</b>, not by calling <b>ParallelPut</b>.</p>\n<p>\r\n</p>",
      "text_content": " Exported qualified.\r\nThis means that you can only call the function by calling PC.ParallelPut, not by calling ParallelPut.\r\n",
      "mdown_content": "Exported qualified.\n\nThis means that you can only call the function by calling **PC.ParallelPut**, not by calling **ParallelPut**.\n"
    },
    {
      "title": "See also",
      "links": [
        "pc_parallelget",
        "read"
      ],
      "raw_content": "<b><a href=\"pc_parallelget.html\">PC.ParallelGet</a> </b>function, which is used to <a href=\"read.html\">read</a> the values of pins on the parallel port.<p>\r\n</p>",
      "text_content": " PC.ParallelGet function, which is used to read the values of pins on the parallel port.\r\n",
      "mdown_content": "**[pc_parallelget.html](PC.ParallelGet)** function, which is used to [read.html](read) the values of pins on the parallel port.\n"
    }
  ],
  "dependencies": [
    "pc_parallelput01.gif"
  ]
}
