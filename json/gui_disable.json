{
  "title": "GUI.Disable",
  "fileName": "gui_disable",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>GUI.Disable</b> (<i>widgetID</i> : <b>int</b>)<p>\r\n</p></font>",
      "mdown_content": "**GUI.Disable** (*widgetID* : **int**)"
    },
    {
      "title": "Description",
      "raw_content": "Disables a widget specified by <i>widgetID</i>. <p>\r\nUsed in conjunction with <b>GUI.Enable</b> to enable and disable widgets. </p>\n<p>\r\nDisabled widgets generally are \"grayed out\" to visually depict their disabled status.</p>\n<p>\r\nDisabled widgets do not respond to keystrokes or mouse clicks.</p>\n<p>\r\n</p>",
      "mdown_content": "Disables a widget specified by *widgetID*. \nUsed in conjunction with **GUI.Enable** to enable and disable widgets. \n\nDisabled widgets generally are \"grayed out\" to visually depict their disabled status.\n\nDisabled widgets do not respond to keystrokes or mouse clicks.\n"
    },
    {
      "title": "Example",
      "code": [
        "        import GUI in \"%oot/lib/GUI\" \r\n        View.Set (\"graphics:100;100\") \r\n        \r\n        var colorCheckBox, redRadio, greenRadio, blueRadio : int\r\n        \r\n        procedure DoNothing\r\n        end DoNothing\r\n        \r\n        procedure ColorCheckBoxProc (filled : boolean)\r\n            if filled then\r\n                GUI.Enable (redRadio)\r\n                GUI.Enable (greenRadio)\r\n                GUI.Enable (blueRadio)\r\n            else\r\n                GUI.Disable (redRadio)\r\n                GUI.Disable (greenRadio)\r\n                GUI.Disable (blueRadio)\r\n            end if\r\n        end ColorCheckBoxProc\r\n        \r\n        colorCheckBox := GUI.CreateCheckBox (10, 80,\r\n            \"Use Color\", ColorCheckBoxProc)\r\n        redRadio := GUI.CreateRadioButton (33, 60, \"Red\", 0, DoNothing)\r\n        greenRadio := GUI.CreateRadioButton (1, 1, \"Green\", \r\n            redRadio, DoNothing)\r\n        blueRadio := GUI.CreateRadioButton (1, 1, \"Blue\", \r\n            greenRadio, DoNothing)\r\n        ColorCheckBoxProc (false)\r\n        \r\n        loop\r\n            exit when GUI.ProcessEvent\r\n        end loop"
      ],
      "raw_content": "The three color radio buttons are enabled only when the color check box is selected.<p>\r\n</p>",
      "mdown_content": "The three color radio buttons are enabled only when the color check box is selected."
    },
    {
      "title": "Details",
      "raw_content": "The following types of widgets can be enabled or disabled:<p>\r\n</p>\n<table><tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td>Buttons, Check Boxes, Radio Buttons, Picture Buttons,<br>\n</td>\n</tr></table>\n<p>\r\nPicture Radio Buttons, Horizontal Scroll Bars, Horizontal Sliders,<br>\r\nCanvases, Text Fields, Vertical Scroll Bars, Vertical Sliders</p>\n<p>\r\n</p>",
      "mdown_content": "The following types of widgets can be enabled or disabled:\n\nÂ \nButtons, Check Boxes, Radio Buttons, Picture Buttons,\n\nPicture Radio Buttons, Horizontal Scroll Bars, Horizontal Sliders,\nCanvases, Text Fields, Vertical Scroll Bars, Vertical Sliders\n"
    },
    {
      "title": "Status",
      "raw_content": "Exported qualified.<p>\r\nThis means that you can only call the procedure by calling <b>GUI.Disable</b>, not by calling <b>Disable</b>.</p>\n<p>\r\n</p>",
      "mdown_content": "Exported qualified.\nThis means that you can only call the procedure by calling **GUI.Disable**, not by calling **Disable**.\n"
    },
    {
      "title": "See also",
      "links": [
        "gui_enable"
      ],
      "raw_content": "<b><a href=\"gui_enable.html\">GUI.Enable</a></b>.<p>\r\n</p>",
      "mdown_content": "**[gui_enable.html](GUI.Enable)**."
    }
  ]
}
