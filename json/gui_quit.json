{
  "title": "GUI.Quit",
  "fileName": "gui_quit",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>GUI.Quit</b><p></p></font>",
      "text_content": "GUI.Quit\r\n    ",
      "mdown_content": "**GUI.Quit**\n"
    },
    {
      "title": "Description",
      "code": [
        "        loop\r\n            exit when GUI.ProcessEvent\r\n        end loop"
      ],
      "raw_content": "This procedure causes <b>GUI.ProcessEvent</b> to return <b>true</b>. \r\n          If the program is structured properly with a<p>\r\n</p>\r\n          at the end of the program, then the program will exit the loop after \r\n\t  finishing the current <i>action procedure</i>. This procedure is \r\n\t  usually called from the <i>action procedure</i> of a Quit button \r\n\t  or Exit menu item. <p>\r\n    </p>",
      "text_content": "This procedure causes GUI.ProcessEvent to return true. \r\n          If the program is structured properly with a\r\n\r\n          at the end of the program, then the program will exit the loop after \r\n\t  finishing the current action procedure. This procedure is \r\n\t  usually called from the action procedure of a Quit button \r\n\t  or Exit menu item. \r\n    ",
      "mdown_content": "This procedure causes **GUI.ProcessEvent** to return **true**. If the program is structured properly with a\n\nat the end of the program, then the program will exit the loop after finishing the current _action procedure_. This procedure is usually called from the _action procedure_ of a Quit button or Exit menu item. \n"
    },
    {
      "title": "Example",
      "code": [
        "        import GUI\r\n        \r\n        procedure KeyHandler (ch : char)\r\n            if ch = 'Q' or ch = 'q' or ch = 'X' or ch = 'x' then\r\n                GUI.Quit\r\n            end if\r\n        end KeyHandler\r\n        \r\n        var quitButton : int := GUI.CreateButton (10, 10, 0, \"Quit\", GUI.Quit)\r\n        GUI.SetKeyEventHandler (KeyHandler)\r\n        \r\n        loop\r\n            exit when GUI.ProcessEvent\r\n        end loop\r\n        \r\n        put \"Done!\""
      ],
      "raw_content": "Here is program that does nothing but wait for the user to press \r\n          the quit button or type the letter 'Q', 'q', 'X', or 'x'.<p>\r\n</p>",
      "text_content": "Here is program that does nothing but wait for the user to press \r\n          the quit button or type the letter 'Q', 'q', 'X', or 'x'.\r\n\r\n    ",
      "mdown_content": "Here is program that does nothing but wait for the user to press the quit button or type the letter 'Q', 'q', 'X', or 'x'.\n"
    },
    {
      "title": "Status",
      "raw_content": "Exported qualified.<p>\r\n\t  This means that you can only call the procedures by calling \r\n\t  <b>GUI.Quit</b>, not by calling <b>Quit</b>.</p>\n<p>\r\n    </p>",
      "text_content": "Exported qualified.\r\n\t  This means that you can only call the procedures by calling \r\n\t  GUI.Quit, not by calling Quit.\r\n    ",
      "mdown_content": "Exported qualified.\n\nThis means that you can only call the procedures by calling **GUI.Quit**, not by calling **Quit**.\n"
    },
    {
      "title": "See also",
      "links": [
        "gui_processevent",
        "gui_resetquit"
      ],
      "raw_content": "<b><a href=\"gui_processevent.html\">GUI.ProcessEvent</a></b>.\r\n          See also <a href=\"gui_resetquit.html\">GUI.ResetQuit</a>\r\n\t  for resetting the \"quit\" flag, so that a second event loop\r\n\t  can be used in the same program.<p>\r\n    </p>",
      "text_content": "GUI.ProcessEvent.\r\n          See also GUI.ResetQuit\r\n\t  for resetting the \"quit\" flag, so that a second event loop\r\n\t  can be used in the same program.\r\n    ",
      "mdown_content": "**[gui_processevent.html](GUI.ProcessEvent)**.See also [gui_resetquit.html](GUI.ResetQuit)for resetting the \"quit\" flag, so that a second event loopcan be used in the same program.\n"
    }
  ],
  "dependencies": [

  ]
}
