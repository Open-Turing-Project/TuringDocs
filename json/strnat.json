{
  "title": "strnat",
  "fileName": "strnat",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>strnat</b> ( <i>s</i> : <b>string</b> [ , <i>base</i> : <b>int</b> ] ) : <b>nat</b><p>\r\n</p></font>",
      "text_content": " strnat ( s : string [ , base : int ] ) : nat\r\n",
      "mdown_content": "**strnat** ( _s_ : **string** [ , _base_ : **int** ] ) : **nat**"
    },
    {
      "title": "Description",
      "raw_content": "The <b>strnat</b> function is used to convert a string to a natural number. The natural number is equivalent to string <i>s</i>. The number <i>base </i>parameter<i> </i>is optional, for example, <b>strnat</b>(\"47\") = 47.<p>\r\nString <i>s</i> must consist of a possibly null sequence of blanks, then an optional plus sign, and finally a sequence of one or more digits. For number bases larger than 10, the digits can include a, b, c &#133; (alternately A, B, C &#133;) which represent the digit values 10, 11, 12 &#133; The <i>base</i>, if given, must be in the range 2 to 36 (36 because there are 10 base ten digits and 26 letters). For example, <b>strnat</b>(\"FF\", 16) = 255.</p>\n<p>\r\nThe <b>natstr</b> function is the inverse of <b>strnat</b>, so for any natural number <i>n</i>, <b>strnat</b>( <b>natstr</b> (<i>n</i>)) = <i>n</i>.</p>\n<p>\r\nThe <b>strnat</b> function is similar to <b>strint</b>, except that <b>strnat</b> handles values that are larger than <b>int</b> values and does not handle negative values.</p>\n<p>\r\n</p>",
      "text_content": " The strnat function is used to convert a string to a natural number. The natural number is equivalent to string s. The number base parameter is optional, for example, strnat(\"47\") = 47.\r\nString s must consist of a possibly null sequence of blanks, then an optional plus sign, and finally a sequence of one or more digits. For number bases larger than 10, the digits can include a, b, c  (alternately A, B, C ) which represent the digit values 10, 11, 12  The base, if given, must be in the range 2 to 36 (36 because there are 10 base ten digits and 26 letters). For example, strnat(\"FF\", 16) = 255.\r\nThe natstr function is the inverse of strnat, so for any natural number n, strnat( natstr (n)) = n.\r\nThe strnat function is similar to strint, except that strnat handles values that are larger than int values and does not handle negative values.\r\n",
      "mdown_content": "The **strnat** function is used to convert a string to a natural number. The natural number is equivalent to string _s_. The number _base_ parameter is optional, for example, **strnat**(\"47\") = 47.\n\nString _s_ must consist of a possibly null sequence of blanks, then an optional plus sign, and finally a sequence of one or more digits. For number bases larger than 10, the digits can include a, b, c &#133; (alternately A, B, C &#133;) which represent the digit values 10, 11, 12 &#133; The _base_, if given, must be in the range 2 to 36 (36 because there are 10 base ten digits and 26 letters). For example, **strnat**(\"FF\", 16) = 255.\n\nThe **natstr** function is the inverse of **strnat**, so for any natural number _n_, **strnat**( **natstr** (_n_)) = _n_.\n\nThe **strnat** function is similar to **strint**, except that **strnat** handles values that are larger than **int** values and does not handle negative values.\n"
    },
    {
      "title": "See also",
      "links": [
        "chr",
        "ord",
        "intstr",
        "and",
        "strint"
      ],
      "raw_content": "the <b><a href=\"chr.html\">chr</a></b>, <b><a href=\"ord.html\">ord</a></b>, <b><a href=\"intstr.html\">intstr</a></b> <b><a href=\"and.html\">and</a></b> <b><a href=\"strint.html\">strint</a></b> functions.<p>\r\n</p>",
      "text_content": " the chr, ord, intstr and strint functions.\r\n",
      "mdown_content": "the **[chr](chr.html)**, **[ord](ord.html)**, **[intstr](intstr.html)** **[and](and.html)** **[strint](strint.html)** functions.\n"
    }
  ],
  "dependencies": [

  ]
}
