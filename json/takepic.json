{
  "title": "takepic",
  "fileName": "takepic",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<b>takepic</b> (<i>x1</i>, <i>y1</i>, <i>x2</i>, <i>y2</i> : <b>int</b>, <b>var</b> <i>buffer</i> : <b>array</b> 1 .. * <b>of</b> <b>int</b>)<p>\r\n    </p>",
      "text_content": "takepic (x1, y1, x2, y2 : int, var buffer : array 1 .. * of int)\r\n    ",
      "mdown_content": "**takepic** (_x1_, _y1_, _x2_, _y2_ : **int**, **var** _buffer_ : **array** 1 .. * **of** **int**)"
    },
    {
      "title": "Description",
      "raw_content": "The <b>takepic</b> procedure is used to record the pixel values in a \r\n          rectangle, with left bottom and right corners of (<i>x1</i>, \r\n          <i>y1</i>) and (<i>x2</i>, <i>y2</i>), in the buffer array. This \r\n          requires a sufficiently-large buffer (see <b>sizepic</b> ). \r\n          The <b>drawpic</b> procedure is used to make copies of the recorded \r\n          rectangle on the screen.<p>\r\n    </p>",
      "text_content": "The takepic procedure is used to record the pixel values in a \r\n          rectangle, with left bottom and right corners of (x1, \r\n          y1) and (x2, y2), in the buffer array. This \r\n          requires a sufficiently-large buffer (see sizepic ). \r\n          The drawpic procedure is used to make copies of the recorded \r\n          rectangle on the screen.\r\n    ",
      "mdown_content": "The **takepic** procedure is used to record the pixel values in a rectangle, with left bottom and right corners of (_x1_, _y1_) and (_x2_, _y2_), in the buffer array. This requires a sufficiently-large buffer (see **sizepic** ). The **drawpic** procedure is used to make copies of the recorded rectangle on the screen."
    },
    {
      "title": "Example",
      "images": [
        "takepic01.gif"
      ],
      "raw_content": "After drawing a happy face, this program copies the face to a new \r\n          location.<p>\r\n\t  </p>\n<center></center>",
      "text_content": "After drawing a happy face, this program copies the face to a new \r\n          location.\r\n\t  \r\n    ",
      "mdown_content": "After drawing a happy face, this program copies the face to a new location."
    },
    {
      "title": "Execute",
      "executables": [
        {
          "buttontext": "Launch Example Program",
          "name": "takepic/drawpic/sizepic Example",
          "file": "takepic.t"
        }
      ]
    },
    {
      "title": "Details",
      "raw_content": "The integer values that <b>takepic</b> places in the buffer can be \r\n          read or written (using the <b>read</b> and <b>write</b> statements). \r\n          Unfortunately, if a value happens to be the pattern used to represent \r\n          the uninitialized value (the largest negative number the hardware can \r\n          represent) assignment (by:=) and <b>put</b> of the individual integer \r\n          values in the buffer will fail.<p>\r\n          The screen should be in a \"<i>graphics</i>\" mode. See the \r\n          <b>setscreen</b> procedure for details. If the screen is not in a \r\n          \"<i>graphics</i>\" mode, it will automatically be set to \r\n          \"<i>graphics</i>\" mode.</p>\n<p>\r\n    </p>",
      "text_content": "The integer values that takepic places in the buffer can be \r\n          read or written (using the read and write statements). \r\n          Unfortunately, if a value happens to be the pattern used to represent \r\n          the uninitialized value (the largest negative number the hardware can \r\n          represent) assignment (by:=) and put of the individual integer \r\n          values in the buffer will fail.\r\n          The screen should be in a \"graphics\" mode. See the \r\n          setscreen procedure for details. If the screen is not in a \r\n          \"graphics\" mode, it will automatically be set to \r\n          \"graphics\" mode.\r\n    ",
      "mdown_content": "The integer values that **takepic** places in the buffer can be read or written (using the **read** and **write** statements). Unfortunately, if a value happens to be the pattern used to represent the uninitialized value (the largest negative number the hardware can represent) assignment (by:=) and **put** of the individual integer values in the buffer will fail.\nThe screen should be in a \"_graphics_\" mode. See the **setscreen** procedure for details. If the screen is not in a \"_graphics_\" mode, it will automatically be set to \"_graphics_\" mode."
    },
    {
      "title": "Details",
      "links": [
        "pic_draw",
        "pic_new",
        "picmodule",
        "picmodule"
      ],
      "raw_content": "The <b>drawpic</b>, <b>takepic</b>, and <b>sizepic</b> subprograms\r\n          have been made obsolete by the subprograms \r\n          <b><a href=\"pic_draw.html\">Pic.Draw</a></b> and\r\n          <b><a href=\"pic_new.html\">Pic.New</a></b> of the \r\n          <b><a href=\"picmodule.html\">Pic</a></b> module.  Users are \r\n          strongly suggested to use those routines instead. The \r\n          <b><a href=\"picmodule.html\">Pic</a></b> module also contains \r\n          subprograms to load images from files.<p>\r\n    </p>",
      "text_content": "The drawpic, takepic, and sizepic subprograms\r\n          have been made obsolete by the subprograms \r\n          Pic.Draw and\r\n          Pic.New of the \r\n          Pic module.  Users are \r\n          strongly suggested to use those routines instead. The \r\n          Pic module also contains \r\n          subprograms to load images from files.\r\n    ",
      "mdown_content": "The **drawpic**, **takepic**, and **sizepic** subprogramshave been made obsolete by the subprograms **[pic_draw.html](Pic.Draw)** and**[pic_new.html](Pic.New)** of the **[picmodule.html](Pic)** module.  Users are strongly suggested to use those routines instead. The **[picmodule.html](Pic)** module also contains subprograms to load images from files."
    },
    {
      "title": "See also",
      "links": [
        "sizepic",
        "drawpic",
        "setscreen",
        "maxx",
        "maxy",
        "drawdot",
        "drawline",
        "drawbox",
        "drawoval",
        "picmodule"
      ],
      "raw_content": "<b><a href=\"sizepic.html\">sizepic</a></b> and \r\n          <b><a href=\"drawpic.html\">drawpic</a></b>. See also \r\n          <b><a href=\"setscreen.html\">setscreen</a></b>, \r\n          <b><a href=\"maxx.html\">maxx</a></b>, \r\n          <b><a href=\"maxy.html\">maxy</a></b>, \r\n          <b><a href=\"drawdot.html\">drawdot</a></b>, \r\n          <b><a href=\"drawline.html\">drawline</a></b>, \r\n          <b><a href=\"drawbox.html\">drawbox</a></b>, and \r\n          <b><a href=\"drawoval.html\">drawoval</a></b>.<p>\r\n          See also predefined unit <b><a href=\"picmodule.html\">Pic</a></b>.</p>\n<p>\r\n    </p>",
      "text_content": "sizepic and \r\n          drawpic. See also \r\n          setscreen, \r\n          maxx, \r\n          maxy, \r\n          drawdot, \r\n          drawline, \r\n          drawbox, and \r\n          drawoval.\r\n          See also predefined unit Pic.\r\n    ",
      "mdown_content": "**[sizepic.html](sizepic)** and **[drawpic.html](drawpic)**. See also **[setscreen.html](setscreen)**, **[maxx.html](maxx)**, **[maxy.html](maxy)**, **[drawdot.html](drawdot)**, **[drawline.html](drawline)**, **[drawbox.html](drawbox)**, and **[drawoval.html](drawoval)**.\nSee also predefined unit **[picmodule.html](Pic)**."
    }
  ],
  "dependencies": [
    "takepic01.gif"
  ]
}
