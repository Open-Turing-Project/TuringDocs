{
  "title": "GUI.SetPosition",
  "fileName": "gui_setposition",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>GUI.SetPosition</b> (<i>widgetID</i>, <i>x</i>, <i>y</i> : <b>int</b>)<p>\r\n</p></font>",
      "text_content": " GUI.SetPosition (widgetID, x, y : int)\r\n",
      "mdown_content": "**GUI.SetPosition** (*widgetID*, *x*, *y* : **int**)"
    },
    {
      "title": "Description",
      "raw_content": "Moves a widget specified by <i>widgetID </i>to the location (<i>x</i>, <i>y</i>). If the widget is visible, it is moved immediately to the new location. If the widget is hidden, it will appear at the new location when the <i>Show</i> procedure is called. Note that the <i>x</i> and <i>y</i> specified here are the same as in the <i>Create</i> method. For example, if you had specified a check box to be right justified in the <i>CreateCheckBoxFull</i> function, then (<i>x</i>, <i>y</i>) in a call to <i>SetPosition</i> would specify the lower-right corner as opposed to the lower-left corner.<p>\r\n</p>",
      "text_content": " Moves a widget specified by widgetID to the location (x, y). If the widget is visible, it is moved immediately to the new location. If the widget is hidden, it will appear at the new location when the Show procedure is called. Note that the x and y specified here are the same as in the Create method. For example, if you had specified a check box to be right justified in the CreateCheckBoxFull function, then (x, y) in a call to SetPosition would specify the lower-right corner as opposed to the lower-left corner.\r\n",
      "mdown_content": "Moves a widget specified by *widgetID *to the location (*x*, *y*). If the widget is visible, it is moved immediately to the new location. If the widget is hidden, it will appear at the new location when the *Show* procedure is called. Note that the *x* and *y* specified here are the same as in the *Create* method. For example, if you had specified a check box to be right justified in the *CreateCheckBoxFull* function, then (*x*, *y*) in a call to *SetPosition* would specify the lower-right corner as opposed to the lower-left corner."
    },
    {
      "title": "Example",
      "code": [
        "        import GUI in \"%oot/lib/GUI\"\r\n        \r\n        var button : int\r\n        \r\n        procedure MoveButton\r\n            var newX, newY : int\r\n            newX := Rand.Int (0, maxx  GUI.GetWidth (button))\r\n            newY := Rand.Int (0, maxy  GUI.GetHeight (button))\r\n            GUI.SetPosition (button, newX, newY)\r\n        end MoveButton\r\n        \r\n        button := GUI.CreateButton (100, 100, 0, \"Move Button\", \r\n            MoveButton)\r\n        loop\r\n            exit when GUI.ProcessEvent\r\n        end loop"
      ],
      "raw_content": "The following program moves the button every time the button is pressed.<p>\r\n</p>",
      "text_content": " The following program moves the button every time the button is pressed.\r\n\r\n",
      "mdown_content": "The following program moves the button every time the button is pressed."
    },
    {
      "title": "Status",
      "raw_content": "Exported qualified.<p>\r\nThis means that you can only call the function by calling <b>GUI.SetPosition</b>, not by calling <b>SetPosition</b>.</p>\n<p>\r\n</p>",
      "text_content": " Exported qualified.\r\nThis means that you can only call the function by calling GUI.SetPosition, not by calling SetPosition.\r\n",
      "mdown_content": "Exported qualified.\nThis means that you can only call the function by calling **GUI.SetPosition**, not by calling **SetPosition**."
    }
  ]
}
