{
  "title": "bind",
  "fileName": "bind",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "A <i>bindDeclaration</i> is:<p>\r\n</p>\n<table>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"8\"><font size=\"+1\"><b>bind</b> [<b>var</b>] <i>id</i> <b>to</b> <i>variableReference</i> </font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"7\"><font size=\"+1\">{ , [<b>var</b>] <i>id</i> <b>to</b> <i>variableReference</i> }</font></td>\n</tr>\n</table>\n<p></p>",
      "text_content": " A bindDeclaration is:\r\n bind [var] id to variableReference   { , [var] id to variableReference }",
      "mdown_content": "A _bindDeclaration_ is:\n\n**bind** [**var**] _id_ **to** _variableReference_ \n{ , [**var**] _id_ **to** _variableReference_ }\n"
    },
    {
      "title": "Description",
      "raw_content": "The <b>bind</b> declaration creates a new name (or names) for a variable reference (or references). You are allowed to change the named item only if you specify <b>var</b>. You can also bind to named non scalar constants.<p>\r\nWhile <i>variableReference</i> is bound it does not disappear in the scope.</p>\n<p>\r\n</p>",
      "text_content": " The bind declaration creates a new name (or names) for a variable reference (or references). You are allowed to change the named item only if you specify var. You can also bind to named non scalar constants.\r\nWhile variableReference is bound it does not disappear in the scope.\r\n",
      "mdown_content": "The **bind** declaration creates a new name (or names) for a variable reference (or references). You are allowed to change the named item only if you specify **var**. You can also bind to named non scalar constants.\nWhile _variableReference_ is bound it does not disappear in the scope."
    },
    {
      "title": "Example",
      "code": [
        "        bind var item to A (n)\r\n        item := 15"
      ],
      "raw_content": "Rename the <i>n</i>-th element of array <i>A</i> so it is called <i>item</i> and then change this element to 15.<p>\r\n</p>",
      "text_content": " Rename the n-th element of array A so it is called item and then change this element to 15.\r\n\r\n",
      "mdown_content": "Rename the _n_-th element of array _A_ so it is called _item_ and then change this element to 15."
    },
    {
      "title": "Details",
      "raw_content": "The scope of the identifier (<i>item </i>above) begins with the <b>bind</b> declaration and lasts to the <b>end</b> of the surrounding program or statement (or to the end of the surrounding part of a <b>case</b> or <b>if</b> statement). During this scope, a change to a subscript (<i>n </i>above) that occurs in the variable reference does not change the element to which the identifier refers.<p>\r\nYou are not allowed to use <b>bind</b> at the outermost level of the main program (except nested inside statements such as <b>if</b>) or at the outermost level in a module.</p>\n<p>\r\nYou can also optionally use the <b>register</b> keyword to request that the bind be done using a machine register. The syntax for <i>bindDeclaration</i> is actually:</p>\n<p>\r\n</p>\n<table><tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td>\n<b>bind</b> [<b>var</b>] [<b>register</b>] <i>id</i> <b>to</b> <i>variableReference</i>\n</td>\n</tr></table>\n<table><tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\">&nbsp;</td>\n<td>{ , [<b>var</b>] [<b>register</b>] <i>id</i> <b>to</b> <i>variableReference </i>}</td>\n</tr></table>\n<p>\r\nIn the current (2002) implementation, programs are run interpretively using pseudo-code and the <b>register</b> keyword is ignored.</p>\n<p>\r\n</p>",
      "text_content": " The scope of the identifier (item above) begins with the bind declaration and lasts to the end of the surrounding program or statement (or to the end of the surrounding part of a case or if statement). During this scope, a change to a subscript (n above) that occurs in the variable reference does not change the element to which the identifier refers.\r\nYou are not allowed to use bind at the outermost level of the main program (except nested inside statements such as if) or at the outermost level in a module.\r\nYou can also optionally use the register keyword to request that the bind be done using a machine register. The syntax for bindDeclaration is actually:\r\n bind [var] [register] id to variableReference  { , [var] [register] id to variableReference }\r\nIn the current (2002) implementation, programs are run interpretively using pseudo-code and the register keyword is ignored.\r\n",
      "mdown_content": "The scope of the identifier (_item _above) begins with the **bind** declaration and lasts to the **end** of the surrounding program or statement (or to the end of the surrounding part of a **case** or **if** statement). During this scope, a change to a subscript (_n _above) that occurs in the variable reference does not change the element to which the identifier refers.\nYou are not allowed to use **bind** at the outermost level of the main program (except nested inside statements such as **if**) or at the outermost level in a module.\nYou can also optionally use the **register** keyword to request that the bind be done using a machine register. The syntax for _bindDeclaration_ is actually:\n\n\n\n{ , [**var**] [**register**] _id_ **to** _variableReference _}\n\nIn the current (2002) implementation, programs are run interpretively using pseudo-code and the **register** keyword is ignored."
    }
  ],
  "dependencies": [

  ]
}
