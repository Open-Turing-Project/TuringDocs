{
  "title": "prefix",
  "fileName": "prefix",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "A <i>prefixOperator</i>  is one of:<p>\r\n</p>\n<table>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(a)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>+</b></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% Integer and real identity</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"6\"><font size=\"+1\"><i>% (does not change value)</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(b)</font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"6\"><font size=\"+1\"><i>% Integer and real negation</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(c)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>not</b></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% Not (Boolean negation)</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(d)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>#</b></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% Type cheat</i></font></td>\n</tr>\n<tr valign=\"top\">\n<td width=\"40\">&nbsp;</td>\n<td width=\"40\"><font size=\"+1\">(e)</font></td>\n<td colspan=\"7\"><font size=\"+1\"><b>^</b></font></td>\n<td width=\"40\">&nbsp;</td>\n<td colspan=\"-1\"><font size=\"+1\"><i>% Pointer following</i></font></td>\n</tr>\n</table>\n<p></p>",
      "text_content": " A prefixOperator  is one of:\r\n (a)+ % Integer and real identity   % (does not change value) (b) % Integer and real negation (c)not % Not (Boolean negation) (d)# % Type cheat (e)^ % Pointer following",
      "mdown_content": "A _prefixOperator_  is one of:   \n-  **+**   _% Integer and real identity_       _% (does not change value)_   \n-    _% Integer and real negation_   \n-  **not**   _% Not (Boolean negation)_   \n-  **#**   _% Type cheat_   \n-  **^**   _% Pointer following_"
    },
    {
      "title": "Description",
      "raw_content": "A <i>prefix operator</i> is placed before a value or <i>operand </i>to produce another value. For example, if the value of <i>x </i>is seven, then -<i>x </i>is negative seven. There are also infix operators such as multiplication (*) and addition (+), which are placed between two values to produce a third value. See <i>infix operator</i>.<p>\r\nThe + and  prefix operators can be applied only to numeric values (integer, real and natural numbers). The <b>not</b> prefix can be applied only to true/false (boolean) values. For example <b>not</b> (<i>x </i>&gt; <i>y</i>)<i> </i> is equivalent to <i>x </i>&lt;= <i>y</i>. The <b>not</b> operator produces <b>true</b> from <b>false</b> and <b>false</b> from <b>true</b>.</p>\n<p>\r\nThe # operators is a type cheat (see <b>cheat</b>), and the ^ operator is pointer following (see <b>pointer</b>).</p>\n<p>\r\n</p>\n<table><tr valign=\"top\">\n<td>See also</td>\n<td width=\"10\">&nbsp;</td>\n<td>\n<b>int</b>, <b>real</b> and <b>boolean</b> types, as well as <i>precedence </i>(for the order of applying operators) and <i>infix operators</i>.</td>\n</tr></table>\n<p>\r\n</p>",
      "text_content": " A prefix operator is placed before a value or operand to produce another value. For example, if the value of x is seven, then -x is negative seven. There are also infix operators such as multiplication (*) and addition (+), which are placed between two values to produce a third value. See infix operator.\r\nThe + and  prefix operators can be applied only to numeric values (integer, real and natural numbers). The not prefix can be applied only to true/false (boolean) values. For example not (x > y)  is equivalent to x <= y. The not operator produces true from false and false from true.\r\nThe # operators is a type cheat (see cheat), and the ^ operator is pointer following (see pointer).\r\nSee also int, real and boolean types, as well as precedence (for the order of applying operators) and infix operators.\r\n",
      "mdown_content": "A _prefix operator_ is placed before a value or _operand_ to produce another value. For example, if the value of _x_ is seven, then -_x_ is negative seven. There are also infix operators such as multiplication (*) and addition (+), which are placed between two values to produce a third value. See _infix operator_.\n\nThe + and  prefix operators can be applied only to numeric values (integer, real and natural numbers). The **not** prefix can be applied only to true/false (boolean) values. For example **not** (_x_ > _y_)  is equivalent to _x_ <= _y_. The **not** operator produces **true** from **false** and **false** from **true**.\n\nThe # operators is a type cheat (see **cheat**), and the ^ operator is pointer following (see **pointer**).\n\n\nSee also   **int**, **real** and **boolean** types, as well as _precedence_ (for the order of applying operators) and _infix operators_.  \n\n"
    }
  ],
  "dependencies": [

  ]
}
