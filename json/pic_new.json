{
  "title": "Pic.New",
  "fileName": "pic_new",
  "sections": [
    {
      "title": "Syntax",
      "raw_content": "<font size=\"+1\"><b>Pic.New</b> (<i>x1</i>, <i>y1</i>, <i>x2</i>, <i>y2</i> : <b>int</b>) : <b>int</b><p></p></font>",
      "mdown_content": "**Pic.New** (*x1*, *y1*, *x2*, *y2* : **int**) : **int**"
    },
    {
      "title": "Description",
      "raw_content": "<b>Pic.New</b> is used to obtain a picture of a portion of the \r\n          screen. The <b>Pic.New</b> procedure allocates the memory for \r\n\t  the picture, which can be very large for pictures of large areas.\r\n\t  The memory is freed up when the program calls <b>Pic.Free</b> with \r\n\t  the picture ID. The picture can be used with the <b>Pic.Draw</b> \r\n\t  and <b>Pic.Save</b>.<p>\r\n\t  The picture is of the screen area defined by the rectangle \r\n\t  (<i>x1</i>,&nbsp;<i>y1</i>) - (<i>x2</i>,&nbsp;<i>y2</i>).</p>\n<p>\r\n    </p>",
      "mdown_content": "**Pic.New** is used to obtain a picture of a portion of the \nscreen. The **Pic.New** procedure allocates the memory for \nthe picture, which can be very large for pictures of large areas.\nThe memory is freed up when the program calls **Pic.Free** with \nthe picture ID. The picture can be used with the **Pic.Draw** \nand **Pic.Save**.\nThe picture is of the screen area defined by the rectangle \n(*x1*, *y1*) - (*x2*, *y2*).\n\n"
    },
    {
      "title": "Details",
      "raw_content": "If the <b>Pic.New</b> call fails, then it returns 0. Also \r\n          <b>Error.Last</b> will return a non-zero value indicating the \r\n\t  reason for the failure. <b>Error.LastMsg</b> will return a string \r\n\t  which contains the textual version of the error.<p>\r\n    </p>",
      "mdown_content": "If the **Pic.New** call fails, then it returns 0. Also \n**Error.Last** will return a non-zero value indicating the \nreason for the failure. **Error.LastMsg** will return a string \nwhich contains the textual version of the error.\n"
    },
    {
      "title": "Example",
      "code": [
        "        var picID: int\r\n        var x, y : int\r\n        Draw.FillBox (50, 50, 150, 150, red)\r\n        Draw.FillStar (50, 50, 150, 150, green)\r\n        Draw.FillOval (100, 100, 30, 30, blue)\r\n        \r\n        picID := Pic.New (50, 50, 150, 150)\r\n        for i : 1 .. 50\r\n            x := Rand.Int (0, maxx)     % Random x\r\n            y := Rand.Int (0, maxy)     % Random y\r\n            Pic.Draw (picID, x, y, picCopy)\r\n        end for\r\n        Pic.Free (picID)"
      ],
      "raw_content": "The program draws a graphic on the screen and then draws it 50 times.<p>\r\n</p>",
      "mdown_content": "The program draws a graphic on the screen and then draws it 50 times."
    },
    {
      "title": "Execute",
      "executables": [
        {
          "buttontext": "Launch Example Program",
          "name": "Pic.New Example",
          "file": "Pic.New.t"
        }
      ]
    },
    {
      "title": "Status",
      "raw_content": "Exported qualified.<p>\r\n\t  This means that you can only call the function by calling \r\n\t  <b>Pic.New</b>, not by calling <b>New</b>.</p>\n<p>\r\n    </p>",
      "mdown_content": "Exported qualified.\nThis means that you can only call the function by calling \n**Pic.New**, not by calling **New**.\n\n"
    }
  ]
}
